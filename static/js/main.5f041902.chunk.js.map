{"version":3,"sources":["assets/icons/sort.svg","components/Section.js","container/Board/Board.js","redux/Board/constants.js","services/Axios.js","services/BoardAPI.js","services/CardAPI.js","redux/Board/Board.action.js","container/Board/ListBoard.js","container/Dashboard.js","container/Header.js","redux/User/constants.js","services/UserAPI.js","redux/User/User.action.js","container/User/LoginOrRegister.js","container/User/Profile.js","container/User/index.js","components/CardView.js","container/Board/Column.js","container/Board/index.js","components/AlignRight.js","container/Navbar.js","container/AppRouter.js","App.js","serviceWorker.js","redux-setup/rootReducer.js","redux/Board/Board.reducer.js","redux/User/User.reducer.js","redux-setup/store.js","index.js"],"names":["module","exports","SectionLayout","styled","div","Section","children","props","Board","dayCreated","cardAmount","_id","onDelete","setCurrentBoard","onShare","to","pathname","title","style","minWidth","margin","hoverable","actions","CopyOutlined","key","color","onClick","e","preventDefault","DeleteOutlined","size","gutter","span","ClockCircleOutlined","moment","format","textAlign","BOARD","FETCH_REQUEST","FETCH","CREATE_REQUEST","CREATE_FAIL","CREATE_SUCCESS","UPDATE_BOARD","UPDATE_BOARD_SUCCESS","UPDATE_BOARD_FAILURE","FETCH_BOARD_DATA","CHANGE_VISIBLE_ADD","ADD_CARD_REQUEST","ADD_CARD_SUCCESS","ADD_CARD_FAILURE","ADD_CARD_CANCEL_REQUEST","UPDATE_CARD","DELETE_CARD","DELETE_CARD_FAIL","SET_CURRENT_BOARD","DELETE_BOARD","CHANGE_INDEX_CARD","client","axios","create","baseURL","withCredentials","xsrfCookieName","xsrfHeaderName","interceptors","request","use","url","headers","localStorage","getItem","error","Promise","reject","BoardApi","fetchAPI","a","get","then","data","fetchDataApi","param","apiURL","params","boardId","console","log","addBoard","boardTitle","post","update","patch","delete","r","public","success","message","failure","CardApi","createCard","columnId","res","changeColumnAndIndex","sourceId","desId","cardId","sourceIndex","desIndex","URL","fetchBoard","fetch","type","payload","dispatch","fetchBoardWithOutLoading","fetchData","column","addCardRequest","index","addCardCancelRequest","updateBoardRequest","Center","AddBoard","List","listBoardConnect","connect","state","listBoard","board","visibleAdd","creating","BoardAction","changeVisible","deleteBoard","deleteFail","publicBoard","useState","titleBoard","setTitle","useEffect","src","alt","height","width","visible","onCancel","onOk","confirmLoading","onChange","value","target","map","i","window","location","href","copy","Title","Typography","Control","Img","img","isAccending","connectDashboard","listboard","setAccending","level","Sort","offset","Headerlayout","HeaderText","h4","active","Header","cate","useLocation","setActive","path","split","indexOf","USER","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_OAUTH","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGOUT","EDIT_REQUEST","EDIT_DONE","UserAPI","login","username","password","apiUrl","user","catch","err","Error","register","email","passwordChange","compare","hashpassword","getUser","logOut","UserAction","UserApi","setItem","token","JSON","stringify","removeItem","disp","isLogged","LoginForm","loginConnect","userAction","isLogin","onFinishLogin","onFinishRegister","facebookLogin","process","googleLogin","loggedIn","name","initialValues","remember","onFinish","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","htmlType","className","orientation","display","danger","GoogleOutlined","FacebookOutlined","layout","alignItems","justifyContent","requiredMark","label","loading","registering","marginBottom","Flex","Colm","connectProfile","parse","edit","editRequest","updateRequest","cancelRequest","confirmPassword","from","setUser","onSave","defaultValue","disabled","User","Layout","Coll","CardView","isEdit","setValue","placement","CloseCircleOutlined","SaveOutlined","FormOutlined","ColumnName","HeaderColumn","HighlightOutlined","icon","PlusOutlined","BodyColumn","card","setEdit","deleteCard","updateCard","draggableId","provided","ref","innerRef","dragHandleProps","draggableProps","LayColumn","LayoutText","ControlAdd","connectColumn","addCard","setWidth","setCard","useRef","current","offsetWidth","isaddCard","wordWrap","wordBreak","droppableId","droppableProps","CoverColumn","connectViewBoard","isfetching","isEditBoard","currentBoard","fetchBoardData","updateBoard","updateFailure","changeIndexCard","source","destination","getState","Object","assign","tempColumn","keys","forEach","push","t","col","colS","filter","colD","cardS","cardD","splice","useParams","maxWidth","onDragEnd","Alignright","AlignRight","Nav","TextLogo","h3","navbarConnect","logout","overlay","arrow","ProtectedRoute","Component","haveHeader","inMain","rest","render","appConnect","getUser2","basename","exact","Dashboard","number","root","Boolean","hostname","match","initState","rootReducer","action","reducerBoard","initialState","loggingIn","reducerUser","combineReducers","require","config","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f041902.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sort.75f0ef31.svg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst SectionLayout = styled.div`\r\n    margin-top:20px;\r\n    width:100%;\r\n`;\r\nexport default function Section({children, ...props}) {\r\n    return (\r\n        <SectionLayout {...props}>\r\n            {children}\r\n        </SectionLayout>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Space } from \"antd\";\r\nimport {\r\n  ClockCircleOutlined,\r\n  DeleteOutlined,\r\n  CopyOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nfunction Board({\r\n  dayCreated,\r\n  cardAmount,\r\n  _id,\r\n  setCurrentBoard,\r\n  onDelete,\r\n  onShare,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: `/board/${_id}`,\r\n      }}\r\n    >\r\n      <Card\r\n        title={props.title}\r\n        style={{ minWidth: \"240px\", margin: \"10px\" }}\r\n        hoverable={true}\r\n        actions={[\r\n          <CopyOutlined\r\n            key=\"edit\"\r\n            style={{ color: \"blue\" }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              onShare();\r\n            }}\r\n          />,\r\n          <DeleteOutlined\r\n            key=\"setting\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              onDelete();\r\n            }}\r\n            style={{color:'rgb(233, 30, 99)'}}\r\n          />,\r\n        ]}\r\n        size=\"small\"\r\n      >\r\n        <Row gutter={16}>\r\n          <Col span={14}>\r\n            <Space>\r\n              <ClockCircleOutlined />\r\n              {moment(dayCreated).format(\"DD/MM/YYYY\") || \"a few second\"}\r\n            </Space>\r\n          </Col>\r\n          <Col span={10} style={{ textAlign: \"end\" }}>\r\n            {cardAmount || \"process\"}\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","const BOARD = {\r\n  FETCH_REQUEST: \"FETCH_REQUEST\",\r\n  FETCH: \"FETCH_BOARD\",\r\n  CREATE_REQUEST: \"CREATE_BOARD_REQUEST\",\r\n  CREATE_FAIL: \"CREATE_FAIL\",\r\n  CREATE_SUCCESS: \"CREATE_SUCCESS\",\r\n  UPDATE_BOARD: \"UPDATE_BOARD\",\r\n  UPDATE_BOARD_SUCCESS:'UPDATE_BOARD_SUCCESS',\r\n  UPDATE_BOARD_FAILURE :'UPDATE_BOARD_FAILURE',\r\n  FETCH_BOARD_DATA: \"FETCH_BOARD_DATA\",\r\n  CHANGE_VISIBLE_ADD: \"CHANGE_VISIBLE_ADD\",\r\n  ADD_CARD_REQUEST: \"ADD_CARD_REQUEST\",\r\n  ADD_CARD_SUCCESS: \"ADD_CARD_SUCCESS\",\r\n  ADD_CARD_FAILURE: \"ADD_CARD_FAILURE\",\r\n  ADD_CARD_CANCEL_REQUEST:'ADD_CARD_CANCEL_REQUEST',\r\n  UPDATE_CARD:'UPDATE_CARD',\r\n  DELETE_CARD:'DELETE_CARD',\r\n  DELETE_CARD_FAIL:\"DELETE_CARD_FAIL\",\r\n  SET_CURRENT_BOARD:'SET_CURRENT_BOARD',\r\n  DELETE_BOARD:'DELETE_BOARD',\r\n  CHANGE_INDEX_CARD:'CHANGE_INDEX_CARD',\r\n};\r\n\r\nexport default BOARD;\r\n","import axios from \"axios\";\r\n\r\n// const apiUrl = process.env.REACT_APP_API_URL;\r\n// const token = localStorage.getItem(\"token\");\r\n// // axios.interceptors.request.use(\r\n// //   (config) => {\r\n// //     const { origin } = new URL(config.url);\r\n// //     const allowedOrigins = [apiUrl];\r\n// //     if (allowedOrigins.includes(origin)) {\r\n// //       config.headers.authorization = `${token}`;\r\n// //     }\r\n// //     return config;\r\n// //   },\r\n// //   (error) => {\r\n// //     return Promise.reject(error);\r\n// //   }\r\n// // );\r\n\r\n// const axiosInstance = axios.create({\r\n//   headers: {\r\n//     Authorization: `${token}`,\r\n//     \"Content-Type\": \"application/json\",\r\n//   },\r\n// });\r\nconst client = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n  withCredentials: true,\r\n  xsrfCookieName: \"csrftoken_testtest\",\r\n  xsrfHeaderName: \"X-CSRFToken\",\r\n});\r\n\r\nclient.interceptors.request.use(\r\n  function (request) {\r\n    if (request.url !== `/api/login_check`) {\r\n      request.headers[\"Authorization\"] = `Bearer ${localStorage.getItem(\r\n        \"token\"\r\n      )}`;\r\n    }\r\n    return request;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default client;\r\n// export default axiosInstance;\r\n","import { message } from \"antd\";\r\nimport axios from \"./Axios\";\r\nconst BoardApi = {};\r\nconst apiURL = \"/board\";\r\n// const apiURL = process.env.REACT_APP_API_URL + \"board\";\r\nBoardApi.fetchAPI = async () => {\r\n  return await axios.get(apiURL).then(({ data }) => {\r\n    return data.data;\r\n  });\r\n};\r\nBoardApi.fetchDataApi = async (param) => {\r\n  try {\r\n    return await axios\r\n      .get(apiURL + \"/data\", { params: { boardId: param } })\r\n      .then(({ data }) => {\r\n        return data;\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nBoardApi.addBoard = async (boardTitle) => {\r\n  try {\r\n    return await axios.post(apiURL, { title: boardTitle }).then(({ data }) => {\r\n      return data;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nBoardApi.update = async ({ _id, title }) => {\r\n  try {\r\n    return await axios.patch(apiURL, { _id, title }).then(({ data }) => {\r\n      if (data) return data;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nBoardApi.delete = async ({ _id }) => {\r\n  try {\r\n    return await axios.delete(apiURL, { data: { _id } }).then((r) => {\r\n      if (r) return r;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nBoardApi.public = async (_id) => {\r\n  const success = () => {\r\n    message.success(\"Coppied!\");\r\n  };\r\n  const failure = () => {\r\n    message.error(\"Error\");\r\n  };\r\n  try {\r\n    return await axios.post(apiURL + \"/public\", { _id }).then((r) => {\r\n      if (r) {\r\n        success();\r\n        return r.data;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    failure();\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default BoardApi;\r\n","import axios from \"./Axios\";\r\nconst CardApi = {};\r\n// const URL = process.env.REACT_APP_API_URL + \"card\";\r\nconst URL = \"/card\";\r\nCardApi.createCard = async ({ columnId, title }) => {\r\n  try {\r\n    return await axios.post(URL, { columnId, title }).then((res) => {\r\n      return res.data;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nCardApi.update = async ({ _id, title }) => {\r\n  try {\r\n    return await axios.patch(URL, { _id, title }).then(({ data }) => {\r\n      if (data) {\r\n        return data;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nCardApi.delete = async ({ _id, columnId }) => {\r\n  try {\r\n    return await axios.delete(URL, { data: { _id, columnId } }).then((res) => {\r\n      if (res) {\r\n        return res;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nCardApi.changeColumnAndIndex = async ({\r\n  sourceId,\r\n  desId,\r\n  cardId,\r\n  sourceIndex,\r\n  desIndex,\r\n}) => {\r\n  try {\r\n    return await axios\r\n      .post(URL + \"/changeIndex\", {\r\n        sourceId,\r\n        desId,\r\n        cardId,\r\n        sourceIndex,\r\n        desIndex,\r\n      })\r\n      .then((r) => {\r\n        if (r) {\r\n          return r;\r\n        }\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport default CardApi;\r\n","import BOARD from \"./constants\";\r\nimport BoardApi from \"../../services/BoardAPI\";\r\nimport CardApi from \"../../services/CardAPI\";\r\nimport { message } from \"antd\";\r\nconst fetchBoard = () => {\r\n  const fetch = (data) => ({ type: BOARD.FETCH, payload: data });\r\n  return async (dispatch) => {\r\n    await BoardApi.fetchAPI().then((data) => {\r\n      dispatch(fetch(data));\r\n    });\r\n  };\r\n};\r\nconst fetchBoardData = (boardId) => {\r\n  const fetchRequest = () => ({ type: BOARD.FETCH_REQUEST });\r\n  const fetchData = (data) => {\r\n    return { type: BOARD.FETCH_BOARD_DATA, payload: data };\r\n  };\r\n  return async (dispatch) => {\r\n    dispatch(fetchRequest());\r\n    try {\r\n      await BoardApi.fetchDataApi(boardId).then((data) => {\r\n        if (data) {\r\n          dispatch(fetchData(data.column));\r\n          dispatch(setCurrentBoard({ _id: boardId, title: data.title }));\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nconst fetchBoardWithOutLoading = (boardId) => {\r\n  const fetchData = (data) => ({ type: BOARD.FETCH_BOARD_DATA, payload: data });\r\n  return async (dispatch) => {\r\n    await BoardApi.fetchDataApi(boardId).then((data) => {\r\n      if (data) {\r\n        dispatch(fetchData(data.column));\r\n        dispatch(setCurrentBoard({ _id: boardId, title: data.title }));\r\n      }\r\n    });\r\n  };\r\n};\r\nconst changeVisibleAdd = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: BOARD.CHANGE_VISIBLE_ADD });\r\n  };\r\n};\r\nconst addBoard = (boardTitle) => {\r\n  const success = () => {\r\n    message.success(\"Create board success!\");\r\n    return {\r\n      type: BOARD.CREATE_SUCCESS,\r\n    };\r\n  };\r\n  const fail = () => {\r\n    message.error(\"Something went wrong!\");\r\n    return {\r\n      type: BOARD.CREATE_FAIL,\r\n    };\r\n  };\r\n  return (dispatch) => {\r\n    dispatch({ type: BOARD.CREATE_REQUEST });\r\n    try {\r\n      BoardApi.addBoard(boardTitle).then((data) => {\r\n        if (data) {\r\n          dispatch(success());\r\n          dispatch(fetchBoard());\r\n        }\r\n      });\r\n    } catch (error) {\r\n      dispatch(fail());\r\n    }\r\n  };\r\n};\r\nconst addCardRequest = (index) => {\r\n  const request = () => ({ type: BOARD.ADD_CARD_REQUEST, payload: index });\r\n  return (dispatch) => {\r\n    dispatch(request());\r\n  };\r\n};\r\nconst addCardCancelRequest = (index) => {\r\n  const request = () => ({\r\n    type: BOARD.ADD_CARD_CANCEL_REQUEST,\r\n    payload: index,\r\n  });\r\n  return (dispatch) => {\r\n    dispatch(request());\r\n  };\r\n};\r\nconst addCard = (index, { columnId, title }, boardId) => {\r\n  const success = () => {\r\n    message.loading(\"Loading...\").then(() => {\r\n      message.success(\"Add card success\");\r\n    });\r\n    return { type: BOARD.ADD_CARD_SUCCESS, payload: index };\r\n  };\r\n  const fail = () => {\r\n    message.error(\"Fail in adding card\");\r\n    return { type: BOARD.ADD_CARD_FAILURE, payload: index };\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      await CardApi.createCard({ columnId, title }).then((r) => {\r\n        if (r) {\r\n          dispatch(success());\r\n          dispatch(fetchBoardWithOutLoading(boardId));\r\n        }\r\n      });\r\n    } catch (error) {\r\n      dispatch(fail());\r\n    }\r\n  };\r\n};\r\nconst updateCard = ({ _id, title }, boardId) => {\r\n  const updateSuccess = () => {\r\n    message.success(\"Update card success!\");\r\n    return {\r\n      type: BOARD.UPDATE_CARD,\r\n    };\r\n  };\r\n  const updateFail = () => {\r\n    message.error(\"Update failure!\");\r\n    return {\r\n      type: BOARD.UPDATE_CARD,\r\n    };\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      await CardApi.update({ _id, title }).then((r) => {\r\n        if (r) {\r\n          dispatch(updateSuccess());\r\n          dispatch(fetchBoardWithOutLoading(boardId));\r\n        }\r\n      });\r\n    } catch (error) {\r\n      dispatch(updateFail());\r\n    }\r\n  };\r\n};\r\nconst deleteCard = ({ _id }, columnId, boardId) => {\r\n  const deleteSuccess = () => {\r\n    message.loading(\"Action in progress..\", 2.5).then(() => {\r\n      message.success(\"Delete card success!\");\r\n    });\r\n    return {\r\n      type: BOARD.DELETE_CARD,\r\n    };\r\n  };\r\n  const deleteFail = () => {\r\n    message.error(\"Delete failure!\");\r\n    return {\r\n      type: BOARD.DELETE_CARD_FAIL,\r\n    };\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      return await CardApi.delete({ _id, columnId }).then((r) => {\r\n        if (r) {\r\n          dispatch(deleteSuccess());\r\n          return dispatch(fetchBoardWithOutLoading(boardId));\r\n        }\r\n\r\n        dispatch(deleteFail());\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(deleteFail());\r\n    }\r\n  };\r\n};\r\nconst updateBoardRequest = () => {\r\n  const updateRequest = () => ({ type: BOARD.UPDATE_BOARD });\r\n  return (dispatch) => {\r\n    dispatch(updateRequest());\r\n  };\r\n};\r\nconst updateBoard = ({ _id, title }) => {\r\n  const updateSuccess = () => {\r\n    message.success(\"Update board title success!\", 0.5).then(() => {\r\n      message.loading(\"Waiting refesh data ...\", 1.5);\r\n    });\r\n    return { type: BOARD.UPDATE_BOARD_SUCCESS };\r\n  };\r\n  const updateFailure = () => ({ type: BOARD.UPDATE_BOARD_FAILURE });\r\n  return async (dispatch) => {\r\n    try {\r\n      await BoardApi.update({ _id, title }).then((r) => {\r\n        if (r) {\r\n          dispatch(fetchBoardWithOutLoading(_id));\r\n          return dispatch(updateSuccess());\r\n        }\r\n        dispatch(updateFailure());\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(updateFailure());\r\n    }\r\n  };\r\n};\r\nconst setCurrentBoard = ({ _id, title }) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: BOARD.SET_CURRENT_BOARD, payload: { _id, title } });\r\n  };\r\n};\r\nconst deleteBoard = ({ _id }) => {\r\n  const deleteSuccess = () => {\r\n    message.success(\"Delete board success!\");\r\n    return { type: BOARD.DELETE_BOARD };\r\n  };\r\n  const deleteFail = () => {\r\n    message.error(\"Error when delete board!\");\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      await BoardApi.delete({ _id }).then((r) => {\r\n        if (!r) dispatch(deleteFail());\r\n        dispatch(deleteSuccess());\r\n      });\r\n    } catch (error) {\r\n      dispatch(deleteFail());\r\n    }\r\n  };\r\n};\r\nconst publicBoard = (_id) => {\r\n  return async (dispatch) => {\r\n    await BoardApi.public(_id).then((r) => {\r\n      console.log(r);\r\n    });\r\n  };\r\n};\r\n\r\nconst changeIndexCard = (source, destination, cardId, boardId) => {\r\n  const { sourceId, sourceIndex } = source;\r\n  const { desId, desIndex } = destination;\r\n  return async (dispatch, getState) => {\r\n    if (sourceId === desId) {\r\n      if (sourceIndex !== desIndex) {\r\n        let column = Object.assign({}, getState().board.column);\r\n        let tempColumn = [];\r\n        Object.keys(column).forEach((e) => {\r\n          if (column[e]._id === sourceId) tempColumn.push(column[e].card);\r\n        });\r\n        let card = tempColumn[0];\r\n        let t = card[sourceIndex];\r\n        card[sourceIndex] = card[desIndex];\r\n        card[desIndex] = t;\r\n      }\r\n    } else {\r\n      let col = [...getState().board.column];\r\n      const colS = col.filter((e) => {\r\n        if (e._id === sourceId) return e.card;\r\n        return null;\r\n      });\r\n      const colD = col.filter((e) => {\r\n        if (e._id === desId) {\r\n          return e.card;\r\n        }\r\n        return null;\r\n      });\r\n      const cardS = colS[0].card;\r\n      const cardD = colD[0].card;\r\n      let a = cardS.splice(sourceIndex,1);\r\n      cardD.splice(desIndex,0,a[0]);\r\n    }\r\n    await CardApi.changeColumnAndIndex({\r\n      sourceId,\r\n      sourceIndex,\r\n      desId,\r\n      desIndex,\r\n      cardId,\r\n    }).then((r) => {\r\n      if (!r) {\r\n        dispatch(fetchBoardWithOutLoading(boardId));\r\n      }\r\n    });\r\n  };\r\n};\r\nexport {\r\n  changeIndexCard,\r\n  publicBoard,\r\n  fetchBoard,\r\n  fetchBoardData,\r\n  changeVisibleAdd,\r\n  addBoard,\r\n  addCard,\r\n  addCardRequest,\r\n  addCardCancelRequest,\r\n  updateCard,\r\n  deleteCard,\r\n  updateBoard,\r\n  updateBoardRequest,\r\n  setCurrentBoard,\r\n  deleteBoard,\r\n};\r\n","import React, {  useState,useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Board from \"./Board\";\r\nimport * as BoardAction from \"../../redux/Board/Board.action\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Input } from \"antd\";\r\nimport copy from 'copy-to-clipboard';\r\nconst Center = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  font-weight: bold;\r\n`;\r\nconst AddBoard = styled.div`\r\n  height: 133px;\r\n  width: 240px;\r\n  border: 2px dashed black;\r\n  padding: 20px;\r\n  margin: 10px;\r\n  &:hover {\r\n    border: 2px dashed rgb(233, 30, 99);\r\n  }\r\n  &:hover div {\r\n    color: rgb(233, 30, 99);\r\n  }\r\n  cursor: pointer;\r\n`;\r\nconst List = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: white;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ListBoard = (props) => {\r\n  const [titleBoard, setTitle] = useState(null);\r\n  const visibleAddBoard = () => {\r\n    props.changeVisible();\r\n  };\r\n  const onCancel = () => {\r\n    props.changeVisible();\r\n  };\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    setTitle(value);\r\n  };\r\n  const onOk = () => {\r\n    if (titleBoard !== null) {\r\n      props.addBoard(titleBoard);\r\n    }\r\n  };\r\n  const onDelete = (_id) => {\r\n    props.deleteBoard(_id)\r\n    props.fetchBoard()\r\n  };\r\n  const onShare =(_id)=>{\r\n    const url = `${window.location.href}/board/${_id}`\r\n    copy(url)\r\n    props.publicBoard(_id)\r\n  }\r\n  const fetchBoard = async()=>{\r\n   await props.fetchBoard();\r\n  }\r\n  useEffect(fetchBoard,[])\r\n  return (\r\n    <List>\r\n      <AddBoard onClick={visibleAddBoard}>\r\n        <Center>\r\n          <img\r\n            src=\"https://img.icons8.com/ios/452/add-list.png\"\r\n            alt=\"add\"\r\n            style={{ height: 50, width: 50 }}\r\n          />\r\n          <div>Add board</div>\r\n        </Center>\r\n      </AddBoard>\r\n      <Modal\r\n        visible={props.visibleAdd}\r\n        title=\"Add board\"\r\n        onCancel={onCancel}\r\n        onOk={onOk}\r\n        confirmLoading={props.creating}\r\n      >\r\n        <Input onChange={onChange} />\r\n      </Modal>\r\n      {props.listBoard.map((e, i) => (\r\n        <Board {...e} key={i} onDelete={()=>onDelete(e._id)} onShare={()=>onShare(e._id)}/>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  listBoard: state.board.listBoard,\r\n  visibleAdd: state.board.visibleAdd,\r\n  creating: state.board.creating,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchBoard: () => {\r\n      dispatch(BoardAction.fetchBoard());\r\n    },\r\n    changeVisible: () => {\r\n      dispatch(BoardAction.changeVisibleAdd());\r\n    },\r\n    addBoard: (title) => {\r\n      dispatch(BoardAction.addBoard(title));\r\n    },\r\n    deleteBoard:(_id)=>{\r\n      dispatch(BoardAction.deleteBoard({_id}))\r\n    },\r\n    publicBoard:_id=>{\r\n      dispatch(BoardAction.publicBoard(_id))\r\n    }\r\n  };\r\n};\r\nconst listBoardConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListBoard);\r\nexport default listBoardConnect;\r\n","import React, { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\nimport Section from \"../components/Section\";\r\nimport { Space, Typography, Divider, Row, Col } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport Sort from \"../assets/icons/sort.svg\";\r\nimport ListBoard from \"../container/Board/ListBoard\";\r\nimport { connect } from \"react-redux\";\r\nimport * as BoardAction from \"../redux/Board/Board.action\";\r\nconst { Title } = Typography;\r\n\r\nconst Control = styled.div`\r\n  min-height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Img = styled.img`\r\n  transition: ease-in 0.3s;\r\n  transform: ${({ isAccending }) =>\r\n    isAccending ? \"rotate(180deg)\" : \"rotate(0deg)\"};\r\n`;\r\nconst Dashboard = (props) => {\r\n  const [isAccending, setAccending] = useState(false);\r\n  const onClickAccending = () => {\r\n    setAccending(!isAccending);\r\n  };\r\n  useEffect(props.fetchBoard, []);\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title level={2}>My boards</Title>\r\n        <Control>\r\n          <Row gutter={16} style={{ width: \"100%\" }}>\r\n            <Col span={8}>\r\n              <Space>\r\n                <Title level={5} style={{ margin: 0 }}>\r\n                  Sort by date:\r\n                </Title>{\" \"}\r\n                <Img\r\n                  src={Sort}\r\n                  alt=\"\"\r\n                  isAccending={isAccending}\r\n                  onClick={onClickAccending}\r\n                />\r\n              </Space>\r\n            </Col>\r\n\r\n            <Col span={8} offset={8}></Col>\r\n          </Row>\r\n        </Control>\r\n        <Divider style={{ margin: \"10px 0px\" }} />\r\n        <ListBoard />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  listboard: state.board.listBoard,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchBoard: () => {\r\n      dispatch(BoardAction.fetchBoard());\r\n    },\r\n  };\r\n};\r\nconst connectDashboard = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\nexport default connectDashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nconst Headerlayout = styled.div`\r\n  padding: 10px 0px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\nconst HeaderText = styled.h4`\r\n  display: inline-block;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 1.15em;\r\n  text-transform: capitalize;\r\n  cursor: pointer;\r\n  border-bottom: ${({ active }) => (active ? \"2px solid black\" : \"none\")};\r\n  &:after {\r\n    display: block;\r\n    content: \"\";\r\n    border-bottom: 2px solid black;\r\n    transform: scaleX(0);\r\n    transition: transform 250ms ease-in-out;\r\n  }\r\n  &:hover:after {\r\n    transform: ${({ active }) => (active ? \"scaleX(0)\" : \"scaleX(1)\")};\r\n  }\r\n`;\r\nconst Header = () => {\r\n  const cate = [\"dashboard\", \"team\", \"analytics\", \"billing\"];\r\n  const { pathname } = useLocation();\r\n  const [active, setActive] = useState(null);\r\n  useEffect(() => {\r\n    let path = pathname.split(\"/\");\r\n    if (path[1] === \"\") {\r\n      setActive(0);\r\n    } else {\r\n      let index = cate.indexOf(path[1]);\r\n      setActive(index);\r\n    }\r\n  }, [cate, pathname]);\r\n  const onClick = (i) => {};\r\n  return (\r\n    <>\r\n      <Row gutter={16}>\r\n        <Col span={10} offset={-14}>\r\n          <Headerlayout>\r\n            {cate.map((e, i) => (\r\n              <Link to={e} key={i}>\r\n                <HeaderText\r\n                  key={i}\r\n                  active={active === i}\r\n                  onClick={() => onClick(i)}\r\n                >\r\n                  {e}\r\n                </HeaderText>\r\n              </Link>\r\n            ))}\r\n          </Headerlayout>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const USER = {\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n    LOGIN_OAUTH:'USERS_LOGIN_OAUTH',\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n    LOGOUT:\"USERS_REQUEST\",\r\n    EDIT_REQUEST:'EDIT_REQUEST',\r\n    EDIT_DONE:'EDIT_DONE'\r\n}\r\n\r\nexport default USER","import axios from \"./Axios\";\r\nconst UserAPI = {};\r\n// const apiUrl = process.env.REACT_APP_API_URL + \"user\";\r\nconst apiUrl = \"/user\";\r\nUserAPI.login = async ({ username, password }) => {\r\n  return await axios\r\n    .post(apiUrl + \"/login\", { username, password })\r\n    .then(({ data }) => {\r\n      return data.user;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      throw new Error({ err });\r\n    });\r\n};\r\nUserAPI.register = async ({ username, password, email }) => {\r\n  try {\r\n    return await axios\r\n      .post(apiUrl + \"/\", { username, password, email })\r\n      .then((r) => {\r\n        if (r) return r.data;\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nUserAPI.update = async ({\r\n  _id,\r\n  username,\r\n  password,\r\n  email,\r\n  passwordChange = false,\r\n}) => {\r\n  try {\r\n    return await axios\r\n      .patch(apiUrl + \"/\", { _id, username, password, email, passwordChange })\r\n      .then((r) => {\r\n        console.log(r);\r\n        if (r) return r.data;\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nUserAPI.compare = async ({ password, hashpassword }) => {\r\n  try {\r\n    return await axios\r\n      .get(apiUrl + \"/confirm\", { password, hashpassword })\r\n      .then((r) => {\r\n        return r;\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nUserAPI.getUser = async () => {\r\n  try {\r\n    return await axios.get(apiUrl + \"/\").then((r) => {\r\n      return r.data;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nUserAPI.logOut = async () => {\r\n  try {\r\n    return axios.get(apiUrl + \"/logout\").then((r) => r.data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport default UserAPI;\r\n","import USER from \"./constants\";\r\nimport UserApi from \"../../services/UserAPI\";\r\nimport { message } from \"antd\";\r\nimport UserAPI from \"../../services/UserAPI\";\r\n\r\nconst UserAction = {};\r\n\r\nUserAction.login = ({ username, password }) => {\r\n  const loginRequest = () => ({ type: USER.LOGIN_REQUEST });\r\n  const loginSuccess = (data) => {\r\n    message.success(\"Login success\");\r\n    return { type: USER.LOGIN_SUCCESS, payload: data };\r\n  };\r\n  const loginFailure = (data) => {\r\n    message.error(\"Invalid fields\");\r\n    return { type: USER.LOGIN_FAILURE, payload: data };\r\n  };\r\n  return async (dispatch) => {\r\n    dispatch(loginRequest());\r\n\r\n    await UserApi.login({ username, password })\r\n      .then(async (res) => {\r\n        if (res) {\r\n          await localStorage.setItem(\"token\", res.token);\r\n          await localStorage.setItem(\"user\", JSON.stringify(res.user));\r\n          dispatch(loginSuccess(res.user));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginFailure());\r\n      });\r\n  };\r\n};\r\nUserAction.register = ({ username, password, email }) => {\r\n  const request = () => {\r\n    return { type: USER.REGISTER_REQUEST };\r\n  };\r\n  const success = () => {\r\n    message.success(\"Register success!\");\r\n    return { type: USER.REGISTER_SUCCESS };\r\n  };\r\n  const failure = () => {\r\n    message.error(\"Register failure!\");\r\n    return { type: USER.REGISTER_FAILURE };\r\n  };\r\n  return async (dispatch) => {\r\n    dispatch(request());\r\n    try {\r\n      await UserApi.register({ username, password, email }).then((r) => {\r\n        if (!r) return dispatch(failure());\r\n        dispatch(success());\r\n      });\r\n    } catch (error) {\r\n      dispatch(failure);\r\n    }\r\n  };\r\n};\r\nUserAction.logout = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await UserAPI.logOut();\r\n    } catch (error) {}\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    dispatch({ type: USER.LOGOUT });\r\n  };\r\n};\r\nUserAction.update = ({ _id, username, password, email, passwordChange }) => {\r\n  const success = () => {\r\n    message.success(\"Update success\");\r\n    return { type: USER.EDIT_DONE };\r\n  };\r\n  const failure = () => {\r\n    message.error(\"Update failure\");\r\n    return { type: USER.EDIT_DONE };\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      await UserAPI.update({\r\n        _id,\r\n        username,\r\n        password,\r\n        email,\r\n        passwordChange,\r\n      }).then((r) => {\r\n        if (r) {\r\n          localStorage.setItem(\"user\", JSON.stringify(r.user));\r\n          return dispatch(success());\r\n        }\r\n        dispatch(failure());\r\n      });\r\n    } catch (error) {\r\n      dispatch(failure());\r\n    }\r\n  };\r\n};\r\nUserAction.updateRequest = (payload) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: USER.EDIT_REQUEST, payload });\r\n  };\r\n};\r\nUserAction.cancelRequest = () => {\r\n  return (disp) => {\r\n    disp({ type: USER.EDIT_DONE });\r\n  };\r\n};\r\nUserAction.compare = ({ password, hashpassword }) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await UserAPI.compare({ password, hashpassword }).then((r) => {\r\n        console.log(r);\r\n      });\r\n    } catch (error) {}\r\n  };\r\n};\r\n\r\nUserAction.getUser2 = () => {\r\n  const loginSuccess = (data) => {\r\n    return { type: USER.LOGIN_SUCCESS, payload: data };\r\n  };\r\n  const loginFail = () => {\r\n    return { type: USER.LOGIN_FAILURE };\r\n  };\r\n  return async (dispatch) => {\r\n    await UserAPI.getUser().then((r) => {\r\n      if (r.isLogged) {\r\n        localStorage.setItem(\"user\", JSON.stringify(r));\r\n        return dispatch(loginSuccess(r));\r\n      } else {\r\n        localStorage.removeItem(\"user\");\r\n        return dispatch(loginFail());\r\n      }\r\n    });\r\n  };\r\n};\r\nexport default UserAction;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Input, Typography, Button, Checkbox, Divider } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport userAction from \"../../redux/User/User.action\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  FacebookOutlined,\r\n  GoogleOutlined,\r\n} from \"@ant-design/icons\";\r\nconst { Title } = Typography;\r\n\r\nconst LoginForm = styled.div`\r\n  width: 350px;\r\n  background-color: white;\r\n  -webkit-box-shadow: 0px 3px 15px -6px rgba(0, 0, 0, 0.75);\r\n  -moz-box-shadow: 0px 3px 15px -6px rgba(0, 0, 0, 0.75);\r\n  box-shadow: 0px 3px 15px -6px rgba(0, 0, 0, 0.75);\r\n  border-radius: 2px;\r\n  padding: 20px 20px;\r\n`;\r\nconst Center = styled.div`\r\n  min-height: 80vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\nfunction LoginOrRegister({ isLogin, ...props }) {\r\n  const onFinishLogin = ({ username, password }) => {\r\n    if (username && password) {\r\n      props.login({ username, password });\r\n    }\r\n  };\r\n  const onFinishRegister = ({ username, password, email }) => {\r\n    props.register({ username, password, email });\r\n  };\r\n  const facebookLogin = () => {\r\n    window.location = `${process.env.REACT_APP_API_URL||'http://localhost:5000'}/api/user/auth/facebook`;\r\n  };\r\n  const googleLogin = () => {\r\n    window.location = `${process.env.REACT_APP_API_URL||'http://localhost:5000'}/api/user/auth/google`;\r\n  };\r\n  const renderLogin = () => {\r\n    return (\r\n      <Center>\r\n        <Title level={4} style={{ textAlign: \"center\" }}>\r\n          Welcome login\r\n        </Title>\r\n        <Form\r\n          name=\"normal_login\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinishLogin}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n          >\r\n            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n              <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Form.Item>\r\n          <Divider orientation=\"center\">Or</Divider>\r\n          <Form.Item>\r\n            <Form.Item style={{ display: \"inline-block\", width: \"calc(50%)\" }}>\r\n              <Button\r\n                onClick={googleLogin}\r\n                style={{ width: \"100%\" }}\r\n                type=\"primary\"\r\n                danger\r\n              >\r\n                <GoogleOutlined />\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item style={{ display: \"inline-block\", width: \"calc(50%)\" }}>\r\n              <Button\r\n                onClick={facebookLogin}\r\n                style={{ width: \"100%\" }}\r\n                type=\"default\"\r\n              >\r\n                <FacebookOutlined style={{ color: \"rgb(24,144,255)\" }} />\r\n              </Button>\r\n            </Form.Item>\r\n          </Form.Item>\r\n        </Form>\r\n      </Center>\r\n    );\r\n  };\r\n  const renderRegister = () => {\r\n    return (\r\n      <Center>\r\n        <LoginForm>\r\n          <div>\r\n            <Title level={2} style={{ textAlign: \"center\" }}>\r\n              Register\r\n            </Title>\r\n          </div>\r\n          <Form\r\n            onFinish={onFinishRegister}\r\n            layout=\"vertical\"\r\n            size=\"middle\"\r\n            style={{\r\n              display: \"flext\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n            requiredMark={false}\r\n          >\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input size=\"middle\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              rules={[\r\n                { required: true, message: \"Please input your email!\" },\r\n                {},\r\n              ]}\r\n            >\r\n              <Input size=\"middle\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input type=\"password\" size=\"middle\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                htmlType=\"submit\"\r\n                style={{ width: \"100%\" }}\r\n                type=\"primary\"\r\n                loading={props.user.registering}\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form.Item>\r\n            <div style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\r\n              If you have account\r\n            </div>\r\n            <Link to=\"/user\">\r\n              <Form.Item>\r\n                <Button style={{ width: \"100%\" }}>Login</Button>\r\n              </Form.Item>\r\n            </Link>\r\n          </Form>\r\n        </LoginForm>\r\n      </Center>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {props.user.loggedIn ? (\r\n        <Redirect to=\"/\" />\r\n      ) : (\r\n        <>{isLogin ? renderLogin() : renderRegister()}</>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: ({ username, password }) =>\r\n      dispatch(userAction.login({ username, password })),\r\n    register: ({ username, password, email }) => {\r\n      dispatch(userAction.register({ username, password, email }));\r\n    },\r\n  };\r\n};\r\nconst loginConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginOrRegister);\r\nexport default loginConnect;\r\n","import React from \"react\";\r\nimport { Avatar, Button, Input, Typography } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport UserAction from \"../../redux/User/User.action\";\r\nimport { useState } from \"react\";\r\nconst { Title } = Typography;\r\nconst Center = styled.div`\r\n  padding: 50px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 10px;\r\n`;\r\nconst Colm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 20px;\r\n`;\r\nfunction Profile(props) {\r\n  const [user, setUser] = useState({\r\n    username:\r\n      props.user.from === \"local\"\r\n        ? props.user.username\r\n        : props.user.from + \" acount\",\r\n    password: null,\r\n    email: props.user.email,\r\n    passwordChange: false,\r\n  });\r\n  const editUsername = () => {\r\n    props.editRequest(0);\r\n  };\r\n  const editEmail = () => {\r\n    props.editRequest(1);\r\n  };\r\n  const cancelRequest = () => {\r\n    props.cancelRequest();\r\n    setUser({\r\n      passwordChange: false,\r\n      ...user,\r\n    });\r\n  };\r\n  const editPassword = () => {\r\n    setUser({\r\n      ...user,\r\n      passwordChange: true,\r\n    });\r\n  };\r\n  const onSave = () => {\r\n    props.update({ _id: props.user._id, ...user });\r\n  };\r\n  return (\r\n    <Center>\r\n      <Colm>\r\n        <Flex>\r\n          <Title level={1}>Profile</Title>\r\n        </Flex>\r\n        <Flex>\r\n          <Colm>\r\n            <Avatar size={128} />\r\n            <Button type=\"ghost\">Edit avatar</Button>\r\n          </Colm>\r\n          <Colm>\r\n            Username\r\n            <Flex>\r\n              <Input\r\n                defaultValue={user.username}\r\n                disabled={props.edit !== 0}\r\n                style={{ width: \"300px\" }}\r\n                onChange={(e) => {\r\n                  setUser({\r\n                    ...user,\r\n                    username: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n              {props.edit !== 0 ? (\r\n                <Button onClick={editUsername}>Edit</Button>\r\n              ) : (\r\n                <>\r\n                  <Button onClick={cancelRequest}>Cancel</Button>\r\n                  <Button onClick={onSave} type=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Flex>\r\n            Email\r\n            <Flex>\r\n              <Input\r\n                defaultValue={user.email}\r\n                disabled={props.edit !== 1}\r\n                onChange={(e) =>\r\n                  setUser({\r\n                    ...user,\r\n                    email: e.target.value,\r\n                  })\r\n                }\r\n              ></Input>\r\n              {props.edit !== 1 ? (\r\n                <Button onClick={editEmail}>Edit</Button>\r\n              ) : (\r\n                <>\r\n                  <Button onClick={cancelRequest}>Cancel</Button>\r\n                  <Button onClick={onSave} type=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Flex>\r\n            {user.passwordChange ? \"Confirm password\" : \"Password\"}\r\n            <Flex>\r\n              <Input\r\n                defaultValue={!user.passwordChange ? \"\" : \"password\"}\r\n                disabled={!user.passwordChange}\r\n                type=\"password\"\r\n                onChange={(e) => {\r\n                  setUser({\r\n                    ...user,\r\n                    password: e.target.value,\r\n                  });\r\n                }}\r\n              ></Input>\r\n              {user.passwordChange ? (\r\n                <>\r\n                  <Button onClick={cancelRequest}>Cancel</Button>\r\n                  <Button onClick={onSave} type=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button onClick={editPassword}>Edit</Button>\r\n              )}\r\n            </Flex>\r\n          </Colm>\r\n        </Flex>\r\n      </Colm>\r\n    </Center>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: JSON.parse(localStorage.getItem(\"user\")).user,\r\n  edit: state.user.edit,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editRequest: (i) => {\r\n      dispatch(UserAction.updateRequest(i));\r\n    },\r\n    cancelRequest: () => {\r\n      dispatch(UserAction.cancelRequest());\r\n    },\r\n    update: ({ _id, email, password, username, passwordChange }) => {\r\n      dispatch(\r\n        UserAction.update({ _id, email, password, username, passwordChange })\r\n      );\r\n    },\r\n    confirmPassword: ({ password, hashpassword }) => {\r\n      dispatch(UserAction.compare({ password, hashpassword }));\r\n    },\r\n  };\r\n};\r\nconst connectProfile = connect(mapStateToProps, mapDispatchToProps)(Profile);\r\nexport default connectProfile;\r\n","import React from \"react\";\r\nimport Login from \"./LoginOrRegister\";\r\nimport Profile from \"./Profile\";\r\nconst User = ({ to }) => {\r\n  switch (to) {\r\n    case 0:\r\n      return <Login isLogin={true} />;\r\n    case 1:\r\n      return <Login isLogin={false} />;\r\n    case 2:\r\n      return <Profile />;\r\n    default:\r\n      return <Login />;\r\n  }\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  FormOutlined,\r\n  DeleteOutlined,\r\n  CloseCircleOutlined,\r\n  SaveOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Input, Tooltip } from \"antd\";\r\nconst Layout = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 8px 8px;\r\n  background-color: ${(props) => props.color || \"white\"};\r\n  color: white;\r\n  min-height: 60px;\r\n  margin-top: 8px;\r\n`;\r\nconst Coll = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`;\r\nexport default function CardView({\r\n  color,\r\n  title,\r\n  onClick,\r\n  isEdit,\r\n  onDelete,\r\n  onCancel,\r\n  onSave,\r\n}) {\r\n  const [value, setValue] = useState(title);\r\n  return (\r\n    <Layout color={color}>\r\n      {isEdit ? (\r\n        <Input\r\n          defaultValue={title}\r\n          style={{ margin: \"0px 5px 0px 0px\" }}\r\n          onChange={(e) => {\r\n            const value = e.target.value;\r\n            setValue(value);\r\n          }}\r\n        />\r\n      ) : (\r\n        <div>{title}</div>\r\n      )}\r\n      {isEdit ? (\r\n        <Coll>\r\n          <Tooltip placement=\"top\" title=\"Cancel edit\">\r\n            <CloseCircleOutlined onClick={onCancel} />\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"Save ?\">\r\n            <SaveOutlined onClick={() => {\r\n              onSave(value)\r\n            }} />\r\n          </Tooltip>\r\n        </Coll>\r\n      ) : (\r\n        <Coll>\r\n          <Tooltip placement=\"top\" title=\"Click to edit\">\r\n            <FormOutlined onClick={onClick} />\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"Delete this card\">\r\n            <DeleteOutlined onClick={onDelete} />\r\n          </Tooltip>\r\n        </Coll>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { PlusOutlined, HighlightOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Input, message } from \"antd\";\r\nimport CardView from \"../../components/CardView\";\r\nimport { connect } from \"react-redux\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport {\r\n  addCard,\r\n  addCardRequest,\r\n  addCardCancelRequest,\r\n  updateCard,\r\n  deleteCard,\r\n} from \"../../redux/Board/Board.action\";\r\nconst ColumnName = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  font-size: 1.25em;\r\n  font-weight: 500;\r\n`;\r\nconst HeaderColumn = ({ color, width, title, onClick }) => {\r\n  return (\r\n    <>\r\n      <ColumnName>\r\n        <HighlightOutlined style={{ color }} />\r\n        <div>{title}</div>\r\n      </ColumnName>\r\n\r\n      <Button\r\n        style={{ width: \"100%\", color }}\r\n        icon={<PlusOutlined />}\r\n        onClick={onClick}\r\n      ></Button>\r\n    </>\r\n  );\r\n};\r\nconst BodyColumn = ({ color, card, _id, ...props }) => {\r\n  const [isEdit, setEdit] = useState(null);\r\n  const onClick = (i) => {\r\n    setEdit(i);\r\n  };\r\n  const onDelete = async (_id, columnId) => {\r\n    try {\r\n      props.deleteCard({ _id }, columnId, props.boardId);\r\n      setEdit(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setEdit(null);\r\n    }\r\n  };\r\n  const onSave = async (value, _id) => {\r\n    message\r\n      .loading(\"Action in progress..\", 2.5)\r\n      .then(() => {\r\n        props.updateCard({ _id, title: value }, props.boardId);\r\n      })\r\n      .then(() => {\r\n        setEdit(null);\r\n      });\r\n  };\r\n  const onCancel = () => {\r\n    setEdit(null);\r\n  };\r\n  return (\r\n    <>\r\n      {card.map((e, i) => {\r\n        return (\r\n          <Draggable draggableId={e._id+''} index={i} key={e._id+i}>\r\n            {(provided) => (\r\n              <div\r\n                key={e + i}\r\n                ref={provided.innerRef}\r\n                {...provided.dragHandleProps}\r\n                {...provided.draggableProps}\r\n              >\r\n                <CardView\r\n                  title={e.title}\r\n                  color={color}\r\n                  onClick={() => onClick(i)}\r\n                  isEdit={isEdit === i}\r\n                  onDelete={() => onDelete(e._id, _id)}\r\n                  onSave={(value) => onSave(value, e._id)}\r\n                  onCancel={() => onCancel()}\r\n                />\r\n              </div>\r\n            )}\r\n          </Draggable>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nconst LayColumn = styled.div`\r\n  width: 100%;\r\n  min-height: 20px;\r\n  margin: 5px 20px;\r\n`;\r\nconst LayoutText = styled.div`\r\n  padding: 5px;\r\n  border: 2px solid black;\r\n`;\r\nconst ControlAdd = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\nconst Column = (props) => {\r\n  const [width, setWidth] = useState(0);\r\n  const [card, setCard] = useState(null);\r\n  const ref = useRef();\r\n  const onClick = () => {\r\n    props.addCardRequest(props.index);\r\n  };\r\n  useEffect(() => {\r\n    if (typeof ref.current !== \"undefined\") {\r\n      setWidth(ref.current.offsetWidth);\r\n    }\r\n  }, [width]);\r\n  const onAddCard = () => {\r\n    const columnId = props._id;\r\n    const title = card;\r\n    if (title) {\r\n      props.addCard(props.index, { columnId, title }, props.boardId);\r\n    }\r\n  };\r\n  const onAddCardCancel = () => {\r\n    props.addCardCancelRequest(props.index);\r\n  };\r\n  return (\r\n    <LayColumn ref={ref}>\r\n      <HeaderColumn {...props} onClick={onClick} />\r\n      {props.isaddCard && (\r\n        <LayoutText>\r\n          <Input\r\n            style={{\r\n              width: width,\r\n              wordWrap: \"break-word\",\r\n              wordBreak: \"break-all\",\r\n            }}\r\n            onChange={(e) => {\r\n              setCard(e.target.value);\r\n            }}\r\n          />\r\n          <ControlAdd>\r\n            <Button type=\"default\" onClick={onAddCardCancel}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"primary\" onClick={onAddCard}>\r\n              Add\r\n            </Button>\r\n          </ControlAdd>\r\n        </LayoutText>\r\n      )}\r\n      <Droppable droppableId={props._id+''}>\r\n        {(provided) => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            <BodyColumn {...props} />\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </LayColumn>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addCard: (i, { columnId, title }, boardId) => {\r\n      dispatch(addCard(i, { columnId, title }, boardId));\r\n    },\r\n    addCardRequest: (index) => {\r\n      dispatch(addCardRequest(index));\r\n    },\r\n    addCardCancelRequest: (index) => {\r\n      dispatch(addCardCancelRequest(index));\r\n    },\r\n    updateCard: ({ _id, title }, boardId) => {\r\n      dispatch(updateCard({ _id, title }, boardId));\r\n    },\r\n    deleteCard: ({ _id }, columnId, boardId) => {\r\n      dispatch(deleteCard({ _id }, columnId, boardId));\r\n    },\r\n  };\r\n};\r\nconst connectColumn = connect(mapStateToProps, mapDispatchToProps)(Column);\r\nexport default connectColumn;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Button, Input, Spin, Space } from \"antd\";\r\nimport Column from \"./Column\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchBoardData,\r\n  updateBoardRequest,\r\n  updateBoard,\r\n  changeIndexCard,\r\n} from \"../../redux/Board/Board.action\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nconst { Title } = Typography;\r\n\r\nconst CoverColumn = styled.div`\r\n  display: flex;\r\n`;\r\nconst Control = styled.div`\r\n  padding: 5px 30px;\r\n  border: 1px solid black;\r\n  background-color: #bbbfca;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Center = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n`;\r\nfunction ViewBoard(props) {\r\n  const [title, setTitle] = useState(null);\r\n  const param = useParams();\r\n  const color = [\"rgb(156,39,176)\", \"rgb(0,150,136)\", \"rgb(233,30,99)\"];\r\n  const fetchBoardData = () => {\r\n    props.fetchBoardData(param.boardId);\r\n  };\r\n  const dragEnd = (e) => {\r\n    const { source, destination, draggableId } = e;\r\n    if (destination === null) return;\r\n    props.changeIndexCard(\r\n      { sourceId: source.droppableId, sourceIndex: source.index },\r\n      {\r\n        desId: destination.droppableId,\r\n        desIndex: destination.index,\r\n      },\r\n      draggableId,\r\n      param.boardId\r\n    );\r\n  };\r\n  const requestEdit = () => {\r\n    props.updateBoardRequest();\r\n  };\r\n  const onChange = (e) => {\r\n    let value = e.target.value;\r\n    setTitle(value);\r\n  };\r\n  const onSave = () => {\r\n    if (title === null) {\r\n      return props.updateBoardRequest();\r\n    }\r\n    props.updateBoard({ _id: param.boardId, title });\r\n  };\r\n  const onCancel = () => {\r\n    props.updateBoardRequest();\r\n  };\r\n  useEffect(fetchBoardData, []);\r\n  return (\r\n    <>\r\n      <Control>\r\n        {props.isEditBoard ? (\r\n          <>\r\n            <Input\r\n              defaultValue={props.currentBoard.title}\r\n              onChange={onChange}\r\n              style={{ maxWidth: \"400px\" }}\r\n            />\r\n            <Button\r\n              size=\"small\"\r\n              type=\"primary\"\r\n              style={{ margin: \"0px 10px\" }}\r\n              onClick={() => onSave()}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              type=\"ghost\"\r\n              style={{ margin: \"0px 10px\" }}\r\n              onClick={() => onCancel()}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Title level={5} style={{ margin: \"0px\" }}>\r\n              {props.currentBoard !== null && !props.isfetching ? (\r\n                props.currentBoard.title\r\n              ) : (\r\n                <Space>\r\n                  Loading <Spin />\r\n                </Space>\r\n              )}\r\n            </Title>\r\n            {props.currentBoard !== null && !props.isfetching && (\r\n              <Button\r\n                size=\"small\"\r\n                type=\"ghost\"\r\n                style={{ margin: \"0px 10px\" }}\r\n                onClick={() => requestEdit()}\r\n              >\r\n                Edit\r\n              </Button>\r\n            )}\r\n          </>\r\n        )}\r\n      </Control>\r\n      <CoverColumn>\r\n        {props.isfetching ? (\r\n          <Center>\r\n            <img\r\n              src=\"https://media0.giphy.com/media/kocrNZBTlCiQw/source.gif\"\r\n              alt=\"load\"\r\n            />\r\n          </Center>\r\n        ) : (\r\n          <DragDropContext onDragEnd={dragEnd}>\r\n            {props.column.map((e, i) => (\r\n              <Column\r\n                color={color[i]}\r\n                key={i}\r\n                index={i}\r\n                isaddCard={props.isaddCard[i]}\r\n                boardId={param.boardId}\r\n                {...e}\r\n              />\r\n            ))}\r\n          </DragDropContext>\r\n        )}\r\n      </CoverColumn>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  column: state.board.column,\r\n  isfetching: state.board.isfetching,\r\n  isaddCard: state.board.isaddCard,\r\n  isEditBoard: state.board.isEditBoard,\r\n  currentBoard: state.board.currentBoard,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchBoardData: (params) => {\r\n      dispatch(fetchBoardData(params));\r\n    },\r\n    updateBoardRequest: () => {\r\n      dispatch(updateBoardRequest());\r\n    },\r\n    updateBoard: ({ _id, title }) => {\r\n      dispatch(updateBoard({ _id, title }));\r\n    },\r\n    changeIndexCard: (source, destination, cardId,boardId) => {\r\n      dispatch(changeIndexCard(source, destination, cardId,boardId));\r\n    },\r\n  };\r\n};\r\nconst connectViewBoard = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewBoard);\r\nexport default connectViewBoard;\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Alignright = styled.div`\r\n  display: flex;\r\n  justify-content:flex-end;\r\n  align-items:center;\r\n`;\r\nexport default function AlignRight({children}) {\r\n    return (\r\n        <Alignright>\r\n            {children}\r\n        </Alignright>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Avatar, Row, Col } from \"antd\";\r\nimport AlignRight from \"../components/AlignRight\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport userAction from \"../redux/User/User.action\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Nav = styled.div`\r\n  display: flex;\r\n  background-color: black;\r\n  min-height: 50px;\r\n  align-items: center;\r\n  padding: 0px 100px;\r\n`;\r\nconst TextLogo = styled.h3`\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 1.5em;\r\n  color: ${(color) => (color ? \"white\" : \"black\")};\r\n`;\r\nfunction Navbar(props) {\r\n  const logOut = () => {props.logOut()};\r\n  const DropMenu = () => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item><Link to='/user/profile'>Profile</Link></Menu.Item>\r\n        <Menu.Item onClick={logOut}>Log out</Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  return (\r\n    <Nav>\r\n      <Row gutter={16} style={{ width: \"100%\" }}>\r\n        <Col span={4}>\r\n          <Link to=\"/\">\r\n            <TextLogo>FunRetro</TextLogo>\r\n          </Link>\r\n        </Col>\r\n        <Col span={4} offset={16}>\r\n          <AlignRight>\r\n            <Dropdown overlay={DropMenu} placement=\"bottomRight\" arrow>\r\n              <Avatar />\r\n            </Dropdown>\r\n          </AlignRight>\r\n        </Col>\r\n      </Row>\r\n    </Nav>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logOut: ()=>dispatch(userAction.logout()),\r\n  };\r\n};\r\n\r\nconst navbarConnect = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\nexport default navbarConnect;\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\r\nimport Dashboard from \"../container/Dashboard\";\r\nimport Header from \"../container/Header\";\r\nimport User from \"../container/User\";\r\nimport Board from \"../container/Board\";\r\nimport { connect } from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\nimport UserAction from \"../redux/User/User.action\";\r\nfunction AppRouter(props) {\r\n  // useEffect(() => {\r\n  //   fetch(\"/user/\")\r\n  //     .then((res) => res.json())\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       props.getUser(res);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // },[]);\r\n  useEffect(props.getUser, []);\r\n  return (\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/user\"\r\n          render={() => {\r\n            return <User to={0} />;\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/user/register\"\r\n          render={() => {\r\n            return <User to={1} />;\r\n          }}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/user/profile\"\r\n          Component={User}\r\n          to={2}\r\n          haveHeader={true}\r\n          {...props}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/\"\r\n          Component={Dashboard}\r\n          haveHeader={true}\r\n          {...props}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/dashboard\"\r\n          Component={Dashboard}\r\n          haveHeader={true}\r\n          {...props}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/board/:boardId?\"\r\n          Component={Board}\r\n          haveHeader={false}\r\n          inMain={false}\r\n          {...props}\r\n        />\r\n        <Route\r\n          path=\"*\"\r\n          render={() => {\r\n            return \"Not found\";\r\n          }}\r\n        />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nconst ProtectedRoute = ({\r\n  Component,\r\n  user,\r\n  path,\r\n  haveHeader,\r\n  inMain = true,\r\n  to = null,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={(props) => {\r\n        return user.loggedIn ? (\r\n          <>\r\n            {inMain ? (\r\n              <div className=\"main\">\r\n                {haveHeader && <Header />}\r\n                <Component to={to} {...props} />\r\n              </div>\r\n            ) : (\r\n              <Component {...props} to={to} />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Redirect to=\"/user\" />\r\n        );\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUser: () => {\r\n      dispatch(UserAction.getUser2());\r\n    },\r\n  };\r\n};\r\nconst appConnect = connect(mapStateToProps, mapDispatchToProps)(AppRouter);\r\nexport default appConnect;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AppRouter from './container/AppRouter'\r\nimport './App.css'\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n        <AppRouter/>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  number: state.root.number,\r\n});\r\n\r\nconst appConnect = connect(mapStateToProps)(App);\r\nexport default appConnect;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initState = {\r\n    user:null,\r\n    number:0\r\n}\r\n\r\nconst rootReducer = (state=initState,action)=>{\r\n    switch(action.type){\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import BOARD from \"./constants\";\r\nlet initState = {\r\n  listBoard: [],\r\n  column: [{ _id: null, card: [], title: null }],\r\n  visibleAdd: false,\r\n  creating: false,\r\n  isfetching: false,\r\n  isaddCard: [false, false, false],\r\n  isEditBoard: false,\r\n  currentBoard: null,\r\n};\r\n\r\nconst reducerBoard = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case BOARD.FETCH:\r\n      state.listBoard = action.payload;\r\n      return { ...state };\r\n    case BOARD.FETCH_REQUEST:\r\n      state.isfetching = true;\r\n      return { ...state };\r\n    case BOARD.UPDATE_BOARD:\r\n      state.isEditBoard = !state.isEditBoard;\r\n      return { ...state };\r\n    case BOARD.UPDATE_BOARD_SUCCESS:\r\n      state.isEditBoard = false;\r\n      return { ...state };\r\n    case BOARD.UPDATE_BOARD_FAILURE:\r\n      state.isEditBoard = true;\r\n      return { ...state };\r\n    case BOARD.FETCH_BOARD_DATA:\r\n      state.isfetching = false;\r\n      state.column = action.payload;\r\n      return { ...state };\r\n    case BOARD.CHANGE_VISIBLE_ADD:\r\n      state.visibleAdd = !state.visibleAdd;\r\n      return { ...state };\r\n    case BOARD.CREATE_REQUEST:\r\n      state.creating = true;\r\n      return { ...state };\r\n    case BOARD.CREATE_SUCCESS:\r\n      state.creating = false;\r\n      return { ...state };\r\n    case BOARD.CREATE_FAIL:\r\n      state.creating = false;\r\n      return { ...state };\r\n    case BOARD.ADD_CARD_REQUEST:\r\n      state.isaddCard[action.payload] = true;\r\n      return { ...state };\r\n    case BOARD.ADD_CARD_SUCCESS:\r\n      state.isaddCard[action.payload] = false;\r\n      return { ...state };\r\n    case BOARD.ADD_CARD_FAILURE:\r\n      state.isaddCard[action.payload] = true;\r\n      return { ...state };\r\n    case BOARD.ADD_CARD_CANCEL_REQUEST:\r\n      state.isaddCard[action.payload] = false;\r\n      return { ...state };\r\n    case BOARD.UPDATE_CARD:\r\n      return { ...state };\r\n    case BOARD.DELETE_CARD:\r\n      return { ...state };\r\n    case BOARD.SET_CURRENT_BOARD:\r\n      state.currentBoard = action.payload;\r\n      return { ...state };\r\n    case BOARD.CHANGE_INDEX_CARD:\r\n      state.column = action.payload;\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducerBoard;\r\n","import USER from \"./constants\";\r\n\r\nlet user = localStorage.getItem(\"user\");\r\nconst initialState = user\r\n  ? { loggedIn: true, user, loggingIn: false, registering: false, edit: null }\r\n  : { registering: false, edit: null };\r\nconst reducerUser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER.LOGIN_REQUEST:\r\n      return {\r\n        loggingIn: true,\r\n        ...state,\r\n      };\r\n    case USER.LOGIN_OAUTH:\r\n      return {\r\n        loggingIn: false,\r\n        user: action.payload.user,\r\n        loggedIn: action.payload.isLogged,\r\n      };\r\n    case USER.LOGIN_SUCCESS:\r\n      return {\r\n        loggedIn: true,\r\n        user: action.payload,\r\n        loggingIn: false,\r\n        ...state,\r\n      };\r\n    case USER.REGISTER_REQUEST:\r\n      state.registering = true;\r\n      return { ...state };\r\n    case USER.REGISTER_SUCCESS:\r\n      state.registering = false;\r\n      return { ...state };\r\n    case USER.REGISTER_FAILURE:\r\n      state.registering = false;\r\n      return { ...state };\r\n    case USER.LOGIN_FAILURE:\r\n      return {};\r\n    case USER.LOGOUT:\r\n      return {};\r\n    case USER.EDIT_DONE:\r\n      state.edit = null;\r\n      return { ...state };\r\n    case USER.EDIT_REQUEST:\r\n      state.edit = action.payload;\r\n      return { ...state };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\nexport default reducerUser;\r\n","import {combineReducers} from 'redux'\r\nimport root from './rootReducer'    \r\nimport board from '../redux/Board/Board.reducer'\r\nimport user from '../redux/User/User.reducer'\r\nconst rootReducer = combineReducers({\r\n    root,\r\n    board,\r\n    user\r\n})\r\n\r\nexport default rootReducer","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./redux-setup/store\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport \"antd/dist/antd.css\";\r\nrequire('dotenv').config();\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(ReduxThunk))\r\n);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}