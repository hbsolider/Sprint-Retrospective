{"version":3,"sources":["assets/icons/sort.svg","components/Section.js","container/Board/Board.js","redux/Board/constants.js","services/Axios.js","services/BoardAPI.js","services/CardAPI.js","redux/Board/Board.action.js","container/Board/ListBoard.js","container/Dashboard.js","container/Header.js","redux/User/constants.js","services/UserAPI.js","redux/User/User.action.js","container/User/LoginOrRegister.js","container/User/Profile.js","container/User/index.js","components/CardView.js","container/Board/Column.js","container/Board/index.js","components/AlignRight.js","container/Navbar.js","container/AppRouter.js","App.js","serviceWorker.js","redux-setup/rootReducer.js","redux/Board/Board.reducer.js","redux/User/User.reducer.js","redux-setup/store.js","index.js"],"names":["module","exports","SectionLayout","styled","div","Section","children","props","Board","dayCreated","cardAmount","_id","onDelete","setCurrentBoard","onShare","to","pathname","process","title","style","minWidth","border","margin","hoverable","actions","CopyOutlined","key","zIndex","onClick","e","preventDefault","DeleteOutlined","size","gutter","span","ClockCircleOutlined","moment","format","textAlign","BOARD","FETCH_REQUEST","FETCH","CREATE_REQUEST","CREATE_FAIL","CREATE_SUCCESS","UPDATE_BOARD","UPDATE_BOARD_SUCCESS","UPDATE_BOARD_FAILURE","FETCH_BOARD_DATA","CHANGE_VISIBLE_ADD","ADD_CARD_REQUEST","ADD_CARD_SUCCESS","ADD_CARD_FAILURE","ADD_CARD_CANCEL_REQUEST","UPDATE_CARD","DELETE_CARD","DELETE_CARD_FAIL","SET_CURRENT_BOARD","DELETE_BOARD","token","localStorage","getItem","axios","interceptors","request","use","config","origin","URL","url","includes","headers","authorization","error","Promise","reject","axiosInstance","create","Authorization","BoardApi","apiURL","fetchAPI","a","get","then","data","fetchDataApi","param","params","boardId","console","log","addBoard","boardTitle","post","update","patch","delete","r","public","success","message","failure","CardApi","createCard","columnId","res","fetchBoard","fetch","type","payload","dispatch","fetchBoardWithOutLoading","fetchData","column","addCardRequest","index","addCardCancelRequest","updateBoardRequest","Center","AddBoard","List","listBoardConnect","connect","state","listBoard","board","visibleAdd","creating","BoardAction","changeVisible","deleteBoard","deleteFail","publicBoard","useState","titleBoard","setTitle","useEffect","src","alt","height","width","visible","onCancel","onOk","confirmLoading","onChange","value","target","map","i","window","location","href","copy","Title","Typography","Control","Img","img","isAccending","Dashboard","setAccending","level","Sort","offset","Headerlayout","HeaderText","h4","active","Header","cate","useLocation","setActive","path","split","indexOf","USER","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGOUT","EDIT_REQUEST","EDIT_DONE","UserAPI","apiUrl","login","username","password","user","catch","err","Error","register","email","passwordChange","compare","hashpassword","UserAction","UserApi","setItem","JSON","stringify","logout","removeItem","updateRequest","cancelRequest","disp","LoginForm","loginConnect","userAction","isLogin","onFinishLogin","onFinishRegister","loggedIn","onFinish","layout","display","alignItems","justifyContent","requiredMark","Item","label","name","rules","required","htmlType","loading","loggingIn","marginBottom","registering","Flex","Colm","connectProfile","parse","edit","editRequest","confirmPassword","setUser","onSave","defaultValue","disabled","User","Layout","color","Coll","CardView","isEdit","setValue","placement","CloseCircleOutlined","SaveOutlined","FormOutlined","ColumnName","HeaderColumn","HighlightOutlined","icon","PlusOutlined","BodyColumn","card","setEdit","deleteCard","updateCard","draggableId","provided","ref","innerRef","dragHandleProps","draggableProps","LayColumn","LayoutText","ControlAdd","connectColumn","addCard","setWidth","setCard","useRef","current","offsetWidth","isaddCard","wordWrap","wordBreak","droppableId","droppableProps","placeholder","CoverColumn","connectViewBoard","isfetching","isEditBoard","currentBoard","fetchBoardData","updateBoard","updateFailure","useParams","maxWidth","onDragEnd","Alignright","AlignRight","Nav","TextLogo","h3","navbarConnect","logOut","overlay","arrow","ProtectedRoute","Component","haveHeader","inMain","rest","render","className","appConnect","exact","number","root","Boolean","hostname","match","initState","rootReducer","action","reducerBoard","initialState","reducerUser","combineReducers","require","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7251565a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sort.75f0ef31.svg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst SectionLayout = styled.div`\r\n    margin-top:20px;\r\n    width:100%;\r\n`;\r\nexport default function Section({children, ...props}) {\r\n    return (\r\n        <SectionLayout {...props}>\r\n            {children}\r\n        </SectionLayout>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Space } from \"antd\";\r\nimport {\r\n  ClockCircleOutlined,\r\n  DeleteOutlined,\r\n  CopyOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nfunction Board({\r\n  dayCreated,\r\n  cardAmount,\r\n  _id,\r\n  setCurrentBoard,\r\n  onDelete,\r\n  onShare,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: process.env.PUBLIC_URL + `/board/${_id}`,\r\n      }}\r\n    >\r\n      <Card\r\n        title={props.title}\r\n        style={{ minWidth: \"240px\", border: \"1px solid black\", margin: \"10px\" }}\r\n        hoverable={true}\r\n        actions={[\r\n          <CopyOutlined\r\n            key=\"edit\"\r\n            style={{ zIndex: 100 }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              onShare();\r\n            }}\r\n          />,\r\n          <DeleteOutlined\r\n            key=\"setting\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              onDelete();\r\n            }}\r\n          />,\r\n        ]}\r\n        size=\"small\"\r\n      >\r\n        <Row gutter={16}>\r\n          <Col span={14}>\r\n            <Space>\r\n              <ClockCircleOutlined />\r\n              {moment(dayCreated).format(\"DD/MM/YYYY\") || \"a few second\"}\r\n            </Space>\r\n          </Col>\r\n          <Col span={10} style={{ textAlign: \"end\" }}>\r\n            {cardAmount || \"process\"}\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","const BOARD = {\r\n  FETCH_REQUEST: \"FETCH_REQUEST\",\r\n  FETCH: \"FETCH_BOARD\",\r\n  CREATE_REQUEST: \"CREATE_BOARD_REQUEST\",\r\n  CREATE_FAIL: \"CREATE_FAIL\",\r\n  CREATE_SUCCESS: \"CREATE_SUCCESS\",\r\n  UPDATE_BOARD: \"UPDATE_BOARD\",\r\n  UPDATE_BOARD_SUCCESS:'UPDATE_BOARD_SUCCESS',\r\n  UPDATE_BOARD_FAILURE :'UPDATE_BOARD_FAILURE',\r\n  FETCH_BOARD_DATA: \"FETCH_BOARD_DATA\",\r\n  CHANGE_VISIBLE_ADD: \"CHANGE_VISIBLE_ADD\",\r\n  ADD_CARD_REQUEST: \"ADD_CARD_REQUEST\",\r\n  ADD_CARD_SUCCESS: \"ADD_CARD_SUCCESS\",\r\n  ADD_CARD_FAILURE: \"ADD_CARD_FAILURE\",\r\n  ADD_CARD_CANCEL_REQUEST:'ADD_CARD_CANCEL_REQUEST',\r\n  UPDATE_CARD:'UPDATE_CARD',\r\n  DELETE_CARD:'DELETE_CARD',\r\n  DELETE_CARD_FAIL:\"DELETE_CARD_FAIL\",\r\n  SET_CURRENT_BOARD:'SET_CURRENT_BOARD',\r\n  DELETE_BOARD:'DELETE_BOARD'\r\n};\r\n\r\nexport default BOARD;\r\n","import axios from \"axios\";\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\nconst token = localStorage.getItem(\"token\");\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const { origin } = new URL(config.url);\r\n    const allowedOrigins = [apiUrl];\r\n    if (allowedOrigins.includes(origin)) {\r\n      config.headers.authorization = `${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst axiosInstance = axios.create({\r\n  headers: {\r\n    Authorization: `${token}`,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\nexport default axiosInstance;\r\n\r\n","import { message } from \"antd\";\r\nimport axios from \"./Axios\";\r\nconst BoardApi = {};\r\nconst apiURL = process.env.REACT_APP_API_URL + \"board\";\r\nBoardApi.fetchAPI = async () => {\r\n  return await axios.get(apiURL).then(({ data }) => {\r\n    return data.data;\r\n  });\r\n};\r\nBoardApi.fetchDataApi = async (param) => {\r\n  try {\r\n    return await axios\r\n      .get(apiURL + \"/data\", { params: { boardId: param } })\r\n      .then(({ data }) => {\r\n        return data;\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nBoardApi.addBoard = async (boardTitle) => {\r\n  try {\r\n    return await axios.post(apiURL, { title: boardTitle }).then(({ data }) => {\r\n      return data;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nBoardApi.update = async ({ _id, title }) => {\r\n  try {\r\n    return await axios.patch(apiURL, { _id, title }).then(({ data }) => {\r\n      if (data) return data;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nBoardApi.delete = async ({ _id }) => {\r\n  try {\r\n    return await axios.delete(apiURL, { data: { _id } }).then((r) => {\r\n      if (r) return r;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nBoardApi.public = async (_id) => {\r\n  const success = () => {\r\n    message.success(\"Coppied!\");\r\n  };\r\n  const failure = () => {\r\n    message.error(\"Error\");\r\n  };\r\n  try {\r\n    return await axios.post(apiURL + \"/public\", { _id }).then((r) => {\r\n      if (r) {\r\n        success();\r\n        return r.data;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    failure();\r\n    console.log(error);\r\n  }\r\n};\r\nexport default BoardApi;\r\n","import axios from \"./Axios\";\r\nconst CardApi = {};\r\nconst URL = process.env.REACT_APP_API_URL + \"card\";\r\nCardApi.createCard = async ({ columnId, title }) => {\r\n  try {\r\n    return await axios.post(URL, { columnId, title }).then((res) => {\r\n      return res.data;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nCardApi.update = async ({ _id, title }) => {\r\n  try {\r\n    return await axios.patch(URL, { _id, title }).then(({ data }) => {\r\n      if (data) {\r\n        return data;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nCardApi.delete = async ({ _id }) => {\r\n  try {\r\n    return await axios.delete(URL, { data:{_id} }).then((res) => {\r\n      if (res) {\r\n        return res;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport default CardApi;\r\n","import BOARD from \"./constants\";\r\nimport BoardApi from \"../../services/BoardAPI\";\r\nimport CardApi from \"../../services/CardAPI\";\r\nimport { message } from \"antd\";\r\nconst fetchBoard = () => {\r\n  const fetch = (data) => ({ type: BOARD.FETCH, payload: data });\r\n  return async (dispatch) => {\r\n    await BoardApi.fetchAPI().then((data) => {\r\n      dispatch(fetch(data));\r\n    });\r\n  };\r\n};\r\nconst fetchBoardData = (boardId) => {\r\n  const fetchRequest = () => ({ type: BOARD.FETCH_REQUEST });\r\n  const fetchData = (data) => ({ type: BOARD.FETCH_BOARD_DATA, payload: data });\r\n  return async (dispatch) => {\r\n    dispatch(fetchRequest());\r\n    try {\r\n      await BoardApi.fetchDataApi(boardId).then((data) => {\r\n        if (data) {\r\n          dispatch(fetchData(data.column));\r\n          dispatch(setCurrentBoard({ _id: boardId, title: data.title }));\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nconst fetchBoardWithOutLoading = (boardId) => {\r\n  const fetchData = (data) => ({ type: BOARD.FETCH_BOARD_DATA, payload: data });\r\n  return (dispatch) => {\r\n    BoardApi.fetchDataApi(boardId).then((data) => {\r\n      dispatch(fetchData(data.column));\r\n      dispatch(setCurrentBoard({ _id: boardId, title: data.title }));\r\n    });\r\n  };\r\n};\r\nconst changeVisibleAdd = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: BOARD.CHANGE_VISIBLE_ADD });\r\n  };\r\n};\r\nconst addBoard = (boardTitle) => {\r\n  const success = () => {\r\n    message.success(\"Create board success!\");\r\n    return {\r\n      type: BOARD.CREATE_SUCCESS,\r\n    };\r\n  };\r\n  const fail = () => {\r\n    message.error(\"Something went wrong!\");\r\n    return {\r\n      type: BOARD.CREATE_FAIL,\r\n    };\r\n  };\r\n  return (dispatch) => {\r\n    dispatch({ type: BOARD.CREATE_REQUEST });\r\n    try {\r\n      BoardApi.addBoard(boardTitle).then((data) => {\r\n        if (data) {\r\n          dispatch(success());\r\n          dispatch(fetchBoard());\r\n        }\r\n      });\r\n    } catch (error) {\r\n      dispatch(fail());\r\n    }\r\n  };\r\n};\r\nconst addCardRequest = (index) => {\r\n  const request = () => ({ type: BOARD.ADD_CARD_REQUEST, payload: index });\r\n  return (dispatch) => {\r\n    dispatch(request());\r\n  };\r\n};\r\nconst addCardCancelRequest = (index) => {\r\n  const request = () => ({\r\n    type: BOARD.ADD_CARD_CANCEL_REQUEST,\r\n    payload: index,\r\n  });\r\n  return (dispatch) => {\r\n    dispatch(request());\r\n  };\r\n};\r\nconst addCard = (index, { columnId, title }, boardId) => {\r\n  const success = () => {\r\n    message.loading(\"Loading...\").then(() => {\r\n      message.success(\"Add card success\");\r\n    });\r\n    return { type: BOARD.ADD_CARD_SUCCESS, payload: index };\r\n  };\r\n  const fail = () => {\r\n    message.error(\"Fail in adding card\");\r\n    return { type: BOARD.ADD_CARD_FAILURE, payload: index };\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      await CardApi.createCard({ columnId, title }).then((r) => {\r\n        if (r) {\r\n          dispatch(success());\r\n          dispatch(fetchBoardWithOutLoading(boardId));\r\n        }\r\n      });\r\n    } catch (error) {\r\n      dispatch(fail());\r\n    }\r\n  };\r\n};\r\nconst updateCard = ({ _id, title }, boardId) => {\r\n  const updateSuccess = () => {\r\n    message.success(\"Update card success!\");\r\n    return {\r\n      type: BOARD.UPDATE_CARD,\r\n    };\r\n  };\r\n  const updateFail = () => {\r\n    message.error(\"Update failure!\");\r\n    return {\r\n      type: BOARD.UPDATE_CARD,\r\n    };\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      await CardApi.update({ _id, title }).then((r) => {\r\n        if (r) {\r\n          dispatch(updateSuccess());\r\n          dispatch(fetchBoardWithOutLoading(boardId));\r\n        }\r\n      });\r\n    } catch (error) {\r\n      dispatch(updateFail());\r\n    }\r\n  };\r\n};\r\nconst deleteCard = ({ _id }, boardId) => {\r\n  const deleteSuccess = () => {\r\n    message.loading(\"Action in progress..\", 2.5).then(() => {\r\n      message.success(\"Delete card success!\");\r\n    });\r\n    return {\r\n      type: BOARD.DELETE_CARD,\r\n    };\r\n  };\r\n  const deleteFail = () => {\r\n    message.error(\"Delete failure!\");\r\n    return {\r\n      type: BOARD.DELETE_CARD_FAIL,\r\n    };\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      return await CardApi.delete({ _id }).then((r) => {\r\n        if (r) {\r\n          dispatch(deleteSuccess());\r\n          return dispatch(fetchBoardWithOutLoading(boardId));\r\n        }\r\n\r\n        dispatch(deleteFail());\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(deleteFail());\r\n    }\r\n  };\r\n};\r\nconst updateBoardRequest = () => {\r\n  const updateRequest = () => ({ type: BOARD.UPDATE_BOARD });\r\n  return (dispatch) => {\r\n    dispatch(updateRequest());\r\n  };\r\n};\r\nconst updateBoard = ({ _id, title }) => {\r\n  const updateSuccess = () => {\r\n    message.success(\"Update board title success!\", 0.5).then(() => {\r\n      message.loading(\"Waiting refesh data ...\", 1.5);\r\n    });\r\n    return { type: BOARD.UPDATE_BOARD_SUCCESS };\r\n  };\r\n  const updateFailure = () => ({ type: BOARD.UPDATE_BOARD_FAILURE });\r\n  return async (dispatch) => {\r\n    try {\r\n      await BoardApi.update({ _id, title }).then((r) => {\r\n        if (r) {\r\n          dispatch(fetchBoardWithOutLoading(_id));\r\n          return dispatch(updateSuccess());\r\n        }\r\n        dispatch(updateFailure());\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(updateFailure());\r\n    }\r\n  };\r\n};\r\nconst setCurrentBoard = ({ _id, title }) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: BOARD.SET_CURRENT_BOARD, payload: { _id, title } });\r\n  };\r\n};\r\nconst deleteBoard = ({ _id }) => {\r\n  const deleteSuccess = () => {\r\n    message.success(\"Delete board success!\");\r\n    return { type: BOARD.DELETE_BOARD };\r\n  };\r\n  const deleteFail = () => {\r\n    message.error(\"Error when delete board!\");\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      await BoardApi.delete({ _id }).then((r) => {\r\n        if (!r) dispatch(deleteFail());\r\n        dispatch(deleteSuccess());\r\n      });\r\n    } catch (error) {\r\n      dispatch(deleteFail());\r\n    }\r\n  };\r\n};\r\nconst publicBoard = (_id) => {\r\n  return async (dispatch) => {\r\n    await BoardApi.public(_id).then((r) => {\r\n      console.log(r);\r\n    });\r\n  };\r\n};\r\nexport {\r\n  publicBoard,\r\n  fetchBoard,\r\n  fetchBoardData,\r\n  changeVisibleAdd,\r\n  addBoard,\r\n  addCard,\r\n  addCardRequest,\r\n  addCardCancelRequest,\r\n  updateCard,\r\n  deleteCard,\r\n  updateBoard,\r\n  updateBoardRequest,\r\n  setCurrentBoard,\r\n  deleteBoard,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Board from \"./Board\";\r\nimport * as BoardAction from \"../../redux/Board/Board.action\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Input } from \"antd\";\r\nimport copy from 'copy-to-clipboard';\r\nconst Center = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  font-weight: bold;\r\n`;\r\nconst AddBoard = styled.div`\r\n  height: 133px;\r\n  width: 240px;\r\n  border: 2px dashed black;\r\n  padding: 20px;\r\n  margin: 10px;\r\n  &:hover {\r\n    border: 2px dashed rgb(233, 30, 99);\r\n  }\r\n  &:hover div {\r\n    color: rgb(233, 30, 99);\r\n  }\r\n  cursor: pointer;\r\n`;\r\nconst List = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: white;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ListBoard = (props) => {\r\n  const [titleBoard, setTitle] = useState(null);\r\n  const visibleAddBoard = () => {\r\n    props.changeVisible();\r\n  };\r\n  const onCancel = () => {\r\n    props.changeVisible();\r\n  };\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    setTitle(value);\r\n  };\r\n  const onOk = () => {\r\n    if (titleBoard !== null) {\r\n      props.addBoard(titleBoard);\r\n    }\r\n  };\r\n  const onDelete = (_id) => {\r\n    props.deleteBoard(_id)\r\n    props.fetchBoard()\r\n  };\r\n  const onShare =(_id)=>{\r\n    console.log(props)\r\n    const url = `${window.location.href}/board/${_id}`\r\n    copy(url)\r\n    props.publicBoard(_id)\r\n  }\r\n  useEffect(props.fetchBoard, []);\r\n  return (\r\n    <List>\r\n      <AddBoard onClick={visibleAddBoard}>\r\n        <Center>\r\n          <img\r\n            src=\"https://img.icons8.com/ios/452/add-list.png\"\r\n            alt=\"add\"\r\n            style={{ height: 50, width: 50 }}\r\n          />\r\n          <div>Add board</div>\r\n        </Center>\r\n      </AddBoard>\r\n      <Modal\r\n        visible={props.visibleAdd}\r\n        title=\"Add board\"\r\n        onCancel={onCancel}\r\n        onOk={onOk}\r\n        confirmLoading={props.creating}\r\n      >\r\n        <Input onChange={onChange} />\r\n      </Modal>\r\n      {props.listBoard.map((e, i) => (\r\n        <Board {...e} key={i} onDelete={()=>onDelete(e._id)} onShare={()=>onShare(e._id)}/>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  listBoard: state.board.listBoard,\r\n  visibleAdd: state.board.visibleAdd,\r\n  creating: state.board.creating,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchBoard: () => {\r\n      dispatch(BoardAction.fetchBoard());\r\n    },\r\n    changeVisible: () => {\r\n      dispatch(BoardAction.changeVisibleAdd());\r\n    },\r\n    addBoard: (title) => {\r\n      dispatch(BoardAction.addBoard(title));\r\n    },\r\n    deleteBoard:(_id)=>{\r\n      dispatch(BoardAction.deleteBoard({_id}))\r\n    },\r\n    publicBoard:_id=>{\r\n      dispatch(BoardAction.publicBoard(_id))\r\n    }\r\n  };\r\n};\r\nconst listBoardConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListBoard);\r\nexport default listBoardConnect;\r\n","import React, {  useState } from \"react\";\r\n// import styled from \"styled-components\";\r\nimport Section from \"../components/Section\";\r\nimport { Space, Typography, Divider, Row, Col } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport Sort from \"../assets/icons/sort.svg\";\r\nimport ListBoard from \"../container/Board/ListBoard\";\r\nconst { Title } = Typography;\r\n\r\nconst Control = styled.div`\r\n  min-height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Img = styled.img`\r\n  transition: ease-in 0.3s;\r\n  transform: ${({ isAccending }) =>\r\n    isAccending ? \"rotate(180deg)\" : \"rotate(0deg)\"};\r\n`;\r\nconst Dashboard = (props) => {\r\n  const [isAccending, setAccending] = useState(false);\r\n  const onClickAccending = () => {\r\n    setAccending(!isAccending);\r\n  };\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title level={2}>My boards</Title>\r\n        <Control>\r\n          <Row gutter={16} style={{ width: \"100%\" }}>\r\n            <Col span={8}>\r\n              <Space>\r\n                <Title level={5} style={{ margin: 0 }}>\r\n                  Sort by date:\r\n                </Title>{\" \"}\r\n                <Img\r\n                  src={Sort}\r\n                  alt=\"\"\r\n                  isAccending={isAccending}\r\n                  onClick={onClickAccending}\r\n                />\r\n              </Space>\r\n            </Col>\r\n\r\n            <Col span={8} offset={8}></Col>\r\n          </Row>\r\n        </Control>\r\n        <Divider style={{ margin: \"10px 0px\" }} />\r\n        <ListBoard />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nconst Headerlayout = styled.div`\r\n  padding: 10px 0px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\nconst HeaderText = styled.h4`\r\n  display: inline-block;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 1.15em;\r\n  text-transform: capitalize;\r\n  cursor: pointer;\r\n  border-bottom: ${({ active }) => (active ? \"2px solid black\" : \"none\")};\r\n  &:after {\r\n    display: block;\r\n    content: \"\";\r\n    border-bottom: 2px solid black;\r\n    transform: scaleX(0);\r\n    transition: transform 250ms ease-in-out;\r\n  }\r\n  &:hover:after {\r\n    transform: ${({ active }) => (active ? \"scaleX(0)\" : \"scaleX(1)\")};\r\n  }\r\n`;\r\nconst Header = () => {\r\n  const cate = [\"dashboard\", \"team\", \"analytics\", \"billing\"];\r\n  const { pathname } = useLocation();\r\n  const [active, setActive] = useState(null);\r\n  useEffect(() => {\r\n    let path = pathname.split(\"/\");\r\n    if (path[1] === \"\") {\r\n      setActive(0);\r\n    } else {\r\n      let index = cate.indexOf(path[1]);\r\n      setActive(index);\r\n    }\r\n  }, [cate, pathname]);\r\n  const onClick = (i) => {};\r\n  return (\r\n    <>\r\n      <Row gutter={16}>\r\n        <Col span={10} offset={-14}>\r\n          <Headerlayout>\r\n            {cate.map((e, i) => (\r\n              <Link to={e} key={i}>\r\n                <HeaderText\r\n                  key={i}\r\n                  active={active === i}\r\n                  onClick={() => onClick(i)}\r\n                >\r\n                  {e}\r\n                </HeaderText>\r\n              </Link>\r\n            ))}\r\n          </Headerlayout>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const USER = {\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n    LOGOUT:\"USERS_REQUEST\",\r\n    EDIT_REQUEST:'EDIT_REQUEST',\r\n    EDIT_DONE:'EDIT_DONE'\r\n}\r\n\r\nexport default USER","import axios from \"./Axios\";\r\nconst UserAPI = {};\r\nconst apiUrl = process.env.REACT_APP_API_URL + \"user\";\r\nUserAPI.login = async ({ username, password }) => {\r\n  return await axios\r\n    .post(apiUrl + \"/login\", { username, password })\r\n    .then(({ data }) => {\r\n      return data.user;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      throw new Error({ err });\r\n    });\r\n};\r\nUserAPI.register = async ({ username, password, email }) => {\r\n  try {\r\n    return await axios.post(apiUrl + \"/\",{username,password,email}).then((r) => {\r\n      if (r) return r.data;\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nUserAPI.update = async ({_id,username, password, email,passwordChange=false})=>{\r\n  try {\r\n    return await axios.patch(apiUrl+'/',{_id,username,password,email,passwordChange}).then(r=>{\r\n      console.log(r)\r\n      if(r) return r.data;\r\n    })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\nUserAPI.compare =async({password,hashpassword})=>{\r\n  try {\r\n    return await axios.get(apiUrl+'/confirm',{password,hashpassword}).then(r=>{\r\n      return r;\r\n    })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\nexport default UserAPI;\r\n","import USER from \"./constants\";\r\nimport UserApi from \"../../services/UserAPI\";\r\nimport { message } from \"antd\";\r\nimport UserAPI from \"../../services/UserAPI\";\r\n\r\nconst UserAction = {};\r\n\r\nUserAction.login = ({ username, password }) => {\r\n  const loginRequest = () => ({ type: USER.LOGIN_REQUEST });\r\n  const loginSuccess = (data) => {\r\n    message.success(\"Login success\");\r\n    return { type: USER.LOGIN_SUCCESS, payload: data };\r\n  };\r\n  const loginFailure = (data) => {\r\n    message.error(\"Invalid fields\");\r\n    return { type: USER.LOGIN_FAILURE, payload: data };\r\n  };\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n\r\n    UserApi.login({ username, password })\r\n      .then((res) => {\r\n        if (res) {\r\n          localStorage.setItem(\"token\", res.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.user));\r\n          dispatch(loginSuccess(res.user));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginFailure());\r\n      });\r\n  };\r\n};\r\nUserAction.register = ({ username, password, email }) => {\r\n  const request = () => {\r\n    return { type: USER.REGISTER_REQUEST };\r\n  };\r\n  const success = () => {\r\n    message.success(\"Register success!\");\r\n    return { type: USER.REGISTER_SUCCESS };\r\n  };\r\n  const failure = () => {\r\n    message.error(\"Register failure!\");\r\n    return { type: USER.REGISTER_FAILURE };\r\n  };\r\n  return async (dispatch) => {\r\n    dispatch(request());\r\n    try {\r\n      await UserApi.register({ username, password, email }).then((r) => {\r\n        if (!r) return dispatch(failure());\r\n        dispatch(success());\r\n      });\r\n    } catch (error) {\r\n      dispatch(failure);\r\n    }\r\n  };\r\n};\r\nUserAction.logout = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    dispatch({ type: USER.LOGOUT });\r\n  };\r\n};\r\nUserAction.update = ({ _id, username, password, email, passwordChange }) => {\r\n  const success = () => {\r\n    message.success(\"Update success\");\r\n    return { type: USER.EDIT_DONE };\r\n  };\r\n  const failure = () => {\r\n    message.error(\"Update failure\");\r\n    return { type: USER.EDIT_DONE };\r\n  };\r\n  return async (dispatch) => {\r\n    try {\r\n      await UserAPI.update({\r\n        _id,\r\n        username,\r\n        password,\r\n        email,\r\n        passwordChange,\r\n      }).then((r) => {\r\n        if (r) {\r\n          localStorage.setItem(\"user\", JSON.stringify(r.user));\r\n          return dispatch(success());\r\n        }\r\n        dispatch(failure());\r\n      });\r\n    } catch (error) {\r\n      dispatch(failure());\r\n    }\r\n  };\r\n};\r\nUserAction.updateRequest = (payload) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: USER.EDIT_REQUEST, payload });\r\n  };\r\n};\r\nUserAction.cancelRequest = () => {\r\n  return (disp) => {\r\n    disp({ type: USER.EDIT_DONE });\r\n  };\r\n};\r\nUserAction.compare = ({ password, hashpassword }) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await UserAPI.compare({ password, hashpassword }).then((r) => {\r\n        console.log(r);\r\n      });\r\n    } catch (error) {}\r\n  };\r\n};\r\nexport default UserAction;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Input, Typography, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport userAction from \"../../redux/User/User.action\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nconst { Title } = Typography;\r\n\r\nconst LoginForm = styled.div`\r\n  width: 350px;\r\n  background-color: white;\r\n  -webkit-box-shadow: 0px 3px 15px -6px rgba(0, 0, 0, 0.75);\r\n  -moz-box-shadow: 0px 3px 15px -6px rgba(0, 0, 0, 0.75);\r\n  box-shadow: 0px 3px 15px -6px rgba(0, 0, 0, 0.75);\r\n  border-radius: 2px;\r\n  padding: 20px 20px;\r\n`;\r\nconst Center = styled.div`\r\n  min-height: 80vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nfunction LoginOrRegister({ isLogin, ...props }) {\r\n  const onFinishLogin = ({ username, password }) => {\r\n    if (username && password) {\r\n      props.login({ username, password });\r\n    }\r\n  };\r\n  const onFinishRegister = ({ username, password, email }) => {\r\n    props.register({username,password,email})\r\n  };\r\n  const renderLogin = () => {\r\n    return (\r\n      <Center>\r\n        <LoginForm>\r\n          <div>\r\n            <Title level={2} style={{ textAlign: \"center\" }}>\r\n              Login\r\n            </Title>\r\n          </div>\r\n          <Form\r\n            onFinish={onFinishLogin}\r\n            layout=\"vertical\"\r\n            size=\"large\"\r\n            style={{\r\n              display: \"flext\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n            requiredMark={false}\r\n          >\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input type=\"password\" size=\"large\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                htmlType=\"submit\"\r\n                style={{ width: \"100%\" }}\r\n                type=\"primary\"\r\n                loading={props.user.loggingIn}\r\n              >\r\n                Login\r\n              </Button>\r\n            </Form.Item>\r\n            <div style={{ textAlign: \"center\", marginBottom: \"10px\" }}>Or</div>\r\n            <Link to={process.env.PUBLIC_URL + \"/user/register\"}>\r\n              <Form.Item>\r\n                <Button style={{ width: \"100%\" }}>Register</Button>\r\n              </Form.Item>\r\n            </Link>\r\n          </Form>\r\n        </LoginForm>\r\n      </Center>\r\n    );\r\n  };\r\n  const renderRegister = () => {\r\n    return (\r\n      <Center>\r\n        <LoginForm>\r\n          <div>\r\n            <Title level={2} style={{ textAlign: \"center\" }}>\r\n              Register\r\n            </Title>\r\n          </div>\r\n          <Form\r\n            onFinish={onFinishRegister}\r\n            layout=\"vertical\"\r\n            size=\"middle\"\r\n            style={{\r\n              display: \"flext\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n            requiredMark={false}\r\n          >\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input size=\"middle\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              rules={[\r\n                { required: true, message: \"Please input your email!\" },\r\n                {},\r\n              ]}\r\n            >\r\n              <Input size=\"middle\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input type=\"password\" size=\"middle\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                htmlType=\"submit\"\r\n                style={{ width: \"100%\" }}\r\n                type=\"primary\"\r\n                loading={props.user.registering}\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form.Item>\r\n            <div style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\r\n              If you have account\r\n            </div>\r\n            <Link to={process.env.PUBLIC_URL + \"/user\"}>\r\n              <Form.Item>\r\n                <Button style={{ width: \"100%\" }}>Login</Button>\r\n              </Form.Item>\r\n            </Link>\r\n          </Form>\r\n        </LoginForm>\r\n      </Center>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {props.user.loggedIn ? (\r\n        <Redirect to={process.env.PUBLIC_URL} />\r\n      ) : (\r\n        <>{isLogin ? renderLogin() : renderRegister()}</>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: ({ username, password }) =>\r\n      dispatch(userAction.login({ username, password })),\r\n    register: ({ username, password, email }) => {\r\n      dispatch(userAction.register({ username, password, email }));\r\n    },\r\n  };\r\n};\r\nconst loginConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginOrRegister);\r\nexport default loginConnect;\r\n","import React from \"react\";\r\nimport { Avatar, Button, Input, Typography } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport UserAction from \"../../redux/User/User.action\";\r\nimport { useState } from \"react\";\r\nconst { Title } = Typography;\r\nconst Center = styled.div`\r\n  padding: 50px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 10px;\r\n`;\r\nconst Colm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 20px;\r\n`;\r\nfunction Profile(props) {\r\n  const [user, setUser] = useState({\r\n    username: props.user.username,\r\n    password: null,\r\n    email: props.user.email,\r\n    passwordChange: false,\r\n  });\r\n  const editUsername = () => {\r\n    props.editRequest(0);\r\n  };\r\n  const editEmail = () => {\r\n    props.editRequest(1);\r\n  };\r\n  const cancelRequest = () => {\r\n    props.cancelRequest();\r\n    setUser({\r\n      passwordChange: false,\r\n      ...user,\r\n    });\r\n  };\r\n  const editPassword = () => {\r\n    setUser({\r\n      ...user,\r\n      passwordChange: true,\r\n    });\r\n  };\r\n  const onSave = () => {\r\n    props.update({ _id: props.user._id, ...user });\r\n  };\r\n  return (\r\n    <Center>\r\n      <Colm>\r\n        <Flex>\r\n          <Title level={1}>Profile</Title>\r\n        </Flex>\r\n        <Flex>\r\n          <Colm>\r\n            <Avatar size={128} />\r\n            <Button type=\"ghost\">Edit avatar</Button>\r\n          </Colm>\r\n          <Colm>\r\n            Username\r\n            <Flex>\r\n              <Input\r\n                defaultValue={user.username}\r\n                disabled={props.edit !== 0}\r\n                style={{ width: \"300px\" }}\r\n                onChange={(e) => {\r\n                  setUser({\r\n                    ...user,\r\n                    username: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n              {props.edit !== 0 ? (\r\n                <Button onClick={editUsername}>Edit</Button>\r\n              ) : (\r\n                <>\r\n                  <Button onClick={cancelRequest}>Cancel</Button>\r\n                  <Button onClick={onSave} type=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Flex>\r\n            Email\r\n            <Flex>\r\n              <Input\r\n                defaultValue={user.email}\r\n                disabled={props.edit !== 1}\r\n                onChange={(e) =>\r\n                  setUser({\r\n                    ...user,\r\n                    email: e.target.value,\r\n                  })\r\n                }\r\n              ></Input>\r\n              {props.edit !== 1 ? (\r\n                <Button onClick={editEmail}>Edit</Button>\r\n              ) : (\r\n                <>\r\n                  <Button onClick={cancelRequest}>Cancel</Button>\r\n                  <Button onClick={onSave} type=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Flex>\r\n            {user.passwordChange ? \"Confirm password\" : \"Password\"}\r\n            <Flex>\r\n              <Input\r\n                defaultValue={!user.passwordChange ? \"\" : \"password\"}\r\n                disabled={!user.passwordChange}\r\n                type=\"password\"\r\n                onChange={(e) => {\r\n                  setUser({\r\n                    ...user,\r\n                    password: e.target.value,\r\n                  });\r\n                }}\r\n              ></Input>\r\n              {user.passwordChange ? (\r\n                <>\r\n                  <Button onClick={cancelRequest}>Cancel</Button>\r\n                  <Button onClick={onSave} type=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button onClick={editPassword}>Edit</Button>\r\n              )}\r\n            </Flex>\r\n          </Colm>\r\n        </Flex>\r\n      </Colm>\r\n    </Center>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: JSON.parse(state.user.user),\r\n  edit: state.user.edit,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editRequest: (i) => {\r\n      dispatch(UserAction.updateRequest(i));\r\n    },\r\n    cancelRequest: () => {\r\n      dispatch(UserAction.cancelRequest());\r\n    },\r\n    update: ({ _id, email, password, username, passwordChange }) => {\r\n      dispatch(\r\n        UserAction.update({ _id, email, password, username, passwordChange })\r\n      );\r\n    },\r\n    confirmPassword: ({ password, hashpassword }) => {\r\n      dispatch(UserAction.compare({ password, hashpassword }));\r\n    },\r\n  };\r\n};\r\nconst connectProfile = connect(mapStateToProps, mapDispatchToProps)(Profile);\r\nexport default connectProfile;\r\n","import React from \"react\";\r\nimport Login from \"./LoginOrRegister\";\r\nimport Profile from \"./Profile\";\r\nconst User = ({ to }) => {\r\n  switch (to) {\r\n    case 0:\r\n      return <Login isLogin={true} />;\r\n    case 1:\r\n      return <Login isLogin={false} />;\r\n    case 2:\r\n      return <Profile />;\r\n    default:\r\n      return <Login />;\r\n  }\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  FormOutlined,\r\n  DeleteOutlined,\r\n  CloseCircleOutlined,\r\n  SaveOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Input, Tooltip } from \"antd\";\r\nconst Layout = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 8px 8px;\r\n  background-color: ${(props) => props.color || \"white\"};\r\n  color: white;\r\n  min-height: 60px;\r\n  margin-top: 8px;\r\n`;\r\nconst Coll = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`;\r\nexport default function CardView({\r\n  color,\r\n  title,\r\n  onClick,\r\n  isEdit,\r\n  onDelete,\r\n  onCancel,\r\n  onSave,\r\n}) {\r\n  const [value, setValue] = useState(title);\r\n  return (\r\n    <Layout color={color}>\r\n      {isEdit ? (\r\n        <Input\r\n          defaultValue={title}\r\n          style={{ margin: \"0px 5px 0px 0px\" }}\r\n          onChange={(e) => {\r\n            const value = e.target.value;\r\n            setValue(value);\r\n          }}\r\n        />\r\n      ) : (\r\n        <div>{title}</div>\r\n      )}\r\n      {isEdit ? (\r\n        <Coll>\r\n          <Tooltip placement=\"top\" title=\"Cancel edit\">\r\n            <CloseCircleOutlined onClick={onCancel} />\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"Save ?\">\r\n            <SaveOutlined onClick={() => {\r\n              onSave(value)\r\n            }} />\r\n          </Tooltip>\r\n        </Coll>\r\n      ) : (\r\n        <Coll>\r\n          <Tooltip placement=\"top\" title=\"Click to edit\">\r\n            <FormOutlined onClick={onClick} />\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"Delete this card\">\r\n            <DeleteOutlined onClick={onDelete} />\r\n          </Tooltip>\r\n        </Coll>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { PlusOutlined, HighlightOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Input, message } from \"antd\";\r\nimport CardView from \"../../components/CardView\";\r\nimport { connect } from \"react-redux\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport {\r\n  addCard,\r\n  addCardRequest,\r\n  addCardCancelRequest,\r\n  updateCard,\r\n  deleteCard,\r\n} from \"../../redux/Board/Board.action\";\r\nconst ColumnName = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  font-size: 1.25em;\r\n  font-weight: 500;\r\n`;\r\nconst HeaderColumn = ({ color, width, title, onClick }) => {\r\n  return (\r\n    <>\r\n      <ColumnName>\r\n        <HighlightOutlined style={{ color }} />\r\n        <div>{title}</div>\r\n      </ColumnName>\r\n\r\n      <Button\r\n        style={{ width: \"100%\", color }}\r\n        icon={<PlusOutlined />}\r\n        onClick={onClick}\r\n      ></Button>\r\n    </>\r\n  );\r\n};\r\nconst BodyColumn = ({ color, card, _id, ...props }) => {\r\n  const [isEdit, setEdit] = useState(null);\r\n  const onClick = (i) => {\r\n    setEdit(i);\r\n  };\r\n  const onDelete = async (_id) => {\r\n    try {\r\n      props.deleteCard({ _id }, props.boardId);\r\n      setEdit(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setEdit(null);\r\n    }\r\n  };\r\n  const onSave = async (value, _id) => {\r\n    message\r\n      .loading(\"Action in progress..\", 2.5)\r\n      .then(() => {\r\n        props.updateCard({ _id, title: value }, props.boardId);\r\n      })\r\n      .then(() => {\r\n        setEdit(null);\r\n      });\r\n  };\r\n  const onCancel = () => {\r\n    setEdit(null);\r\n  };\r\n  return (\r\n    <>\r\n      {card.map((e, i) => {\r\n        return (\r\n          <Draggable draggableId={e._id} index={i} key={e._id}>\r\n            {(provided) => (\r\n              <div\r\n                key={e + i}\r\n                ref={provided.innerRef}\r\n                {...provided.dragHandleProps}\r\n                {...provided.draggableProps}\r\n              >\r\n                <CardView\r\n                  title={e.title}\r\n                  color={color}\r\n                  onClick={() => onClick(i)}\r\n                  isEdit={isEdit === i}\r\n                  onDelete={() => onDelete(e._id)}\r\n                  onSave={(value) => onSave(value, e._id)}\r\n                  onCancel={() => onCancel()}\r\n                />\r\n              </div>\r\n            )}\r\n          </Draggable>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nconst LayColumn = styled.div`\r\n  width: 100%;\r\n  min-height: 20px;\r\n  margin: 5px 20px;\r\n`;\r\nconst LayoutText = styled.div`\r\n  padding: 5px;\r\n  border: 2px solid black;\r\n`;\r\nconst ControlAdd = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\nconst Column = (props) => {\r\n  const [width, setWidth] = useState(0);\r\n  const [card, setCard] = useState(null);\r\n  const ref = useRef();\r\n  const onClick = () => {\r\n    props.addCardRequest(props.index);\r\n  };\r\n  useEffect(() => {\r\n    if (typeof ref.current !== \"undefined\") {\r\n      setWidth(ref.current.offsetWidth);\r\n    }\r\n  }, [width]);\r\n  const onAddCard = () => {\r\n    const columnId = props._id;\r\n    const title = card;\r\n    if (title) {\r\n      props.addCard(props.index, { columnId, title }, props.boardId);\r\n    }\r\n  };\r\n  const onAddCardCancel = () => {\r\n    props.addCardCancelRequest(props.index);\r\n  };\r\n  return (\r\n    <LayColumn ref={ref}>\r\n      <HeaderColumn {...props} onClick={onClick} />\r\n      {props.isaddCard && (\r\n        <LayoutText>\r\n          <Input\r\n            style={{\r\n              width: width,\r\n              wordWrap: \"break-word\",\r\n              wordBreak: \"break-all\",\r\n            }}\r\n            onChange={(e) => {\r\n              setCard(e.target.value);\r\n            }}\r\n          />\r\n          <ControlAdd>\r\n            <Button type=\"default\" onClick={onAddCardCancel}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"primary\" onClick={onAddCard}>\r\n              Add\r\n            </Button>\r\n          </ControlAdd>\r\n        </LayoutText>\r\n      )}\r\n      <Droppable droppableId={props._id}>\r\n        {(provided) => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            <BodyColumn {...props} />\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </LayColumn>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addCard: (i, { columnId, title }, boardId) => {\r\n      dispatch(addCard(i, { columnId, title }, boardId));\r\n    },\r\n    addCardRequest: (index) => {\r\n      dispatch(addCardRequest(index));\r\n    },\r\n    addCardCancelRequest: (index) => {\r\n      dispatch(addCardCancelRequest(index));\r\n    },\r\n    updateCard: ({ _id, title }, boardId) => {\r\n      dispatch(updateCard({ _id, title }, boardId));\r\n    },\r\n    deleteCard: ({ _id }, boardId) => {\r\n      dispatch(deleteCard({ _id }, boardId));\r\n    },\r\n  };\r\n};\r\nconst connectColumn = connect(mapStateToProps, mapDispatchToProps)(Column);\r\nexport default connectColumn;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Button, Input, Spin, Space } from \"antd\";\r\nimport Column from \"./Column\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchBoardData,\r\n  updateBoardRequest,\r\n  updateBoard,\r\n} from \"../../redux/Board/Board.action\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nconst { Title } = Typography;\r\n\r\nconst CoverColumn = styled.div`\r\n  display: flex;\r\n`;\r\nconst Control = styled.div`\r\n  padding: 5px 30px;\r\n  border: 1px solid black;\r\n  background-color: #bbbfca;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Center = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n`;\r\nfunction ViewBoard(props) {\r\n  const [title, setTitle] = useState(null);\r\n  const param = useParams();\r\n  const color = [\"rgb(156,39,176)\", \"rgb(0,150,136)\", \"rgb(233,30,99)\"];\r\n  const fetchBoardData = () => {\r\n    props.fetchBoardData(param.boardId);\r\n  };\r\n  const dragEnd = (e) => {};\r\n  const requestEdit = () => {\r\n    props.updateBoardRequest();\r\n  };\r\n  const onChange = (e) => {\r\n    let value = e.target.value;\r\n    setTitle(value);\r\n  };\r\n  const onSave = () => {\r\n    if (title === null) {\r\n      return props.updateBoardRequest();\r\n    }\r\n    props.updateBoard({ _id: param.boardId, title });\r\n  };\r\n  const onCancel = () => {\r\n    props.updateBoardRequest();\r\n  };\r\n  useEffect(fetchBoardData, []);\r\n  return (\r\n    <>\r\n      <Control>\r\n        {props.isEditBoard ? (\r\n          <>\r\n            <Input\r\n              defaultValue={props.currentBoard.title}\r\n              onChange={onChange}\r\n              style={{ maxWidth: \"400px\" }}\r\n            />\r\n            <Button\r\n              size=\"small\"\r\n              type=\"primary\"\r\n              style={{ margin: \"0px 10px\" }}\r\n              onClick={() => onSave()}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              type=\"ghost\"\r\n              style={{ margin: \"0px 10px\" }}\r\n              onClick={() => onCancel()}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Title level={5} style={{ margin: \"0px\" }}>\r\n              {props.currentBoard !== null && !props.isfetching ? (\r\n                props.currentBoard.title\r\n              ) : (\r\n                <Space>\r\n                  Loading <Spin />\r\n                </Space>\r\n              )}\r\n            </Title>\r\n            {props.currentBoard !== null && !props.isfetching && (\r\n              <Button\r\n                size=\"small\"\r\n                type=\"ghost\"\r\n                style={{ margin: \"0px 10px\" }}\r\n                onClick={() => requestEdit()}\r\n              >\r\n                Edit\r\n              </Button>\r\n            )}\r\n          </>\r\n        )}\r\n      </Control>\r\n      <CoverColumn>\r\n        {props.isfetching ? (\r\n          <Center>\r\n            <img\r\n              src=\"https://media0.giphy.com/media/kocrNZBTlCiQw/source.gif\"\r\n              alt=\"load\"\r\n            />\r\n          </Center>\r\n        ) : (\r\n          <DragDropContext onDragEnd={dragEnd}>\r\n            {props.column.map((e, i) => (\r\n              <Column\r\n                color={color[i]}\r\n                key={i}\r\n                index={i}\r\n                isaddCard={props.isaddCard[i]}\r\n                boardId={param.boardId}\r\n                {...e}\r\n              />\r\n            ))}\r\n          </DragDropContext>\r\n        )}\r\n      </CoverColumn>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  column: state.board.column,\r\n  isfetching: state.board.isfetching,\r\n  isaddCard: state.board.isaddCard,\r\n  isEditBoard: state.board.isEditBoard,\r\n  currentBoard: state.board.currentBoard,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchBoardData: (params) => {\r\n      dispatch(fetchBoardData(params));\r\n    },\r\n    updateBoardRequest: () => {\r\n      dispatch(updateBoardRequest());\r\n    },\r\n    updateBoard: ({ _id, title }) => {\r\n      dispatch(updateBoard({ _id, title }));\r\n    },\r\n  };\r\n};\r\nconst connectViewBoard = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewBoard);\r\nexport default connectViewBoard;\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Alignright = styled.div`\r\n  display: flex;\r\n  justify-content:flex-end;\r\n  align-items:center;\r\n`;\r\nexport default function AlignRight({children}) {\r\n    return (\r\n        <Alignright>\r\n            {children}\r\n        </Alignright>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Avatar, Row, Col } from \"antd\";\r\nimport AlignRight from \"../components/AlignRight\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport userAction from \"../redux/User/User.action\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Nav = styled.div`\r\n  display: flex;\r\n  background-color: black;\r\n  min-height: 50px;\r\n  align-items: center;\r\n  padding: 0px 100px;\r\n`;\r\nconst TextLogo = styled.h3`\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 1.5em;\r\n  color: ${(color) => (color ? \"white\" : \"black\")};\r\n`;\r\nfunction Navbar(props) {\r\n  const logOut = () => {props.logOut()};\r\n  const DropMenu = () => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item><Link to={process.env.PUBLIC_URL+'/user/profile'}>Profile</Link></Menu.Item>\r\n        <Menu.Item onClick={logOut}>Log out</Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  return (\r\n    <Nav>\r\n      <Row gutter={16} style={{ width: \"100%\" }}>\r\n        <Col span={4}>\r\n          <Link to={process.env.PUBLIC_URL+\"/\"}>\r\n            <TextLogo>FunRetro</TextLogo>\r\n          </Link>\r\n        </Col>\r\n        <Col span={4} offset={16}>\r\n          <AlignRight>\r\n            <Dropdown overlay={DropMenu} placement=\"bottomRight\" arrow>\r\n              <Avatar />\r\n            </Dropdown>\r\n          </AlignRight>\r\n        </Col>\r\n      </Row>\r\n    </Nav>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logOut: ()=>dispatch(userAction.logout()),\r\n  };\r\n};\r\n\r\nconst navbarConnect = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\nexport default navbarConnect;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Dashboard from \"../container/Dashboard\";\r\nimport Header from \"../container/Header\";\r\nimport User from \"../container/User\";\r\nimport Board from \"../container/Board\";\r\nimport { connect } from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\nfunction AppRouter(props) {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={process.env.PUBLIC_URL + \"/user\"}\r\n          render={() => {\r\n            return <User to={0} />;\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path={process.env.PUBLIC_URL + \"/user/register\"}\r\n          render={() => {\r\n            return <User to={1} />;\r\n          }}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path={process.env.PUBLIC_URL + \"/user/profile\"}\r\n          Component={User}\r\n          to={2}\r\n          haveHeader={true}\r\n          {...props}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path={process.env.PUBLIC_URL + \"/\"}\r\n          Component={Dashboard}\r\n          haveHeader={true}\r\n          {...props}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path={process.env.PUBLIC_URL + \"/dashboard\"}\r\n          Component={Dashboard}\r\n          haveHeader={true}\r\n          {...props}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path={process.env.PUBLIC_URL + \"/board/:boardId?\"}\r\n          Component={Board}\r\n          haveHeader={false}\r\n          inMain={false}\r\n          {...props}\r\n        />\r\n        <Route path=\"*\" render={()=>{\r\n          return \"Not found\"\r\n        }}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst ProtectedRoute = ({\r\n  Component,\r\n  user,\r\n  path,\r\n  haveHeader,\r\n  inMain = true,\r\n  to = null,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={(props) => {\r\n        return user.loggedIn ? (\r\n          <>\r\n            {inMain ? (\r\n              <div className=\"main\">\r\n                {haveHeader && <Header />}\r\n                <Component to={to} {...props} />\r\n              </div>\r\n            ) : (\r\n              <Component {...props} to={to} />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Redirect to={process.env.PUBLIC_URL + \"/user\"} />\r\n        );\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst appConnect = connect(mapStateToProps)(AppRouter);\r\nexport default appConnect;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AppRouter from './container/AppRouter'\r\nimport './App.css'\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n        <AppRouter/>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  number: state.root.number,\r\n});\r\n\r\nconst appConnect = connect(mapStateToProps)(App);\r\nexport default appConnect;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initState = {\r\n    user:null,\r\n    number:0\r\n}\r\n\r\nconst rootReducer = (state=initState,action)=>{\r\n    switch(action.type){\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import BOARD from \"./constants\";\r\nlet initState = {\r\n  listBoard: [],\r\n  column: [],\r\n  visibleAdd: false,\r\n  creating: false,\r\n  isfetching: false,\r\n  isaddCard: [false, false, false],\r\n  isEditBoard: false,\r\n  currentBoard: null,\r\n};\r\n\r\nconst reducerBoard = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case BOARD.FETCH:\r\n      state.listBoard = action.payload;\r\n      return { ...state };\r\n    case BOARD.FETCH_REQUEST:\r\n      state.isfetching = true;\r\n      return { ...state };\r\n    case BOARD.UPDATE_BOARD:\r\n      state.isEditBoard = !state.isEditBoard;\r\n      return { ...state };\r\n    case BOARD.UPDATE_BOARD_SUCCESS:\r\n      state.isEditBoard = false;\r\n      return { ...state };\r\n    case BOARD.UPDATE_BOARD_FAILURE:\r\n      state.isEditBoard = true;\r\n      return { ...state };\r\n    case BOARD.FETCH_BOARD_DATA:\r\n      state.isfetching = false;\r\n      state.column = action.payload;\r\n      return { ...state };\r\n    case BOARD.CHANGE_VISIBLE_ADD:\r\n      state.visibleAdd = !state.visibleAdd;\r\n      return { ...state };\r\n    case BOARD.CREATE_REQUEST:\r\n      state.creating = true;\r\n      return { ...state };\r\n    case BOARD.CREATE_SUCCESS:\r\n      state.creating = false;\r\n      return { ...state };\r\n    case BOARD.CREATE_FAIL:\r\n      state.creating = false;\r\n      return { ...state };\r\n    case BOARD.ADD_CARD_REQUEST:\r\n      state.isaddCard[action.payload] = true;\r\n      return { ...state };\r\n    case BOARD.ADD_CARD_SUCCESS:\r\n      state.isaddCard[action.payload] = false;\r\n      return { ...state };\r\n    case BOARD.ADD_CARD_FAILURE:\r\n      state.isaddCard[action.payload] = true;\r\n      return { ...state };\r\n    case BOARD.ADD_CARD_CANCEL_REQUEST:\r\n      state.isaddCard[action.payload] = false;\r\n      return { ...state };\r\n    case BOARD.UPDATE_CARD:\r\n      return { ...state };\r\n    case BOARD.DELETE_CARD:\r\n      return { ...state };\r\n    case BOARD.SET_CURRENT_BOARD:\r\n      state.currentBoard = action.payload;\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducerBoard;\r\n","import USER from \"./constants\";\r\n\r\nlet user = localStorage.getItem(\"user\");\r\nconst initialState = user\r\n  ? { loggedIn: true, user, loggingIn: false, registering: false, edit: null }\r\n  : { registering: false, edit: null };\r\n\r\nconst reducerUser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER.LOGIN_REQUEST:\r\n      return {\r\n        loggingIn: true,\r\n        ...state,\r\n      };\r\n    case USER.LOGIN_SUCCESS:\r\n      return {\r\n        loggedIn: true,\r\n        user: action.payload,\r\n        loggingIn: false,\r\n        ...state,\r\n      };\r\n    case USER.REGISTER_REQUEST:\r\n      state.registering = true;\r\n      return { ...state };\r\n    case USER.REGISTER_SUCCESS:\r\n      state.registering = false;\r\n      return { ...state };\r\n    case USER.REGISTER_FAILURE:\r\n      state.registering = false;\r\n      return { ...state };\r\n    case USER.LOGIN_FAILURE:\r\n      return {};\r\n    case USER.LOGOUT:\r\n      return {};\r\n    case USER.EDIT_DONE:\r\n      state.edit = null;\r\n      return { ...state };\r\n    case USER.EDIT_REQUEST:\r\n      state.edit = action.payload;\r\n      return { ...state };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\nexport default reducerUser;\r\n","import {combineReducers} from 'redux'\r\nimport root from './rootReducer'    \r\nimport board from '../redux/Board/Board.reducer'\r\nimport user from '../redux/User/User.reducer'\r\nconst rootReducer = combineReducers({\r\n    root,\r\n    board,\r\n    user\r\n})\r\n\r\nexport default rootReducer","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./redux-setup/store\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport \"antd/dist/antd.css\";\r\nrequire('dotenv').config();\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(ReduxThunk))\r\n);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}