{"version":3,"sources":["assets/icons/sort.svg","components/Section.js","container/Board/Board.js","container/Board/AddBoard.js","redux/Board/constants.js","services/Axios.js","services/BoardAPI.js","redux/Board/Board.action.js","container/Board/index.js","container/Dashboard.js","container/Header.js","redux/User/constants.js","services/UserAPI.js","redux/User/User.action.js","container/User/Login.js","container/User/index.js","components/AlignRight.js","container/Navbar.js","container/AppRouter.js","App.js","serviceWorker.js","redux-setup/rootReducer.js","redux/Board/Board.reducer.js","redux/User/User.reducer.js","redux-setup/store.js","index.js"],"names":["module","exports","SectionLayout","styled","div","Section","children","props","Board","dayCreated","cardAmount","title","style","minWidth","border","margin","hoverable","actions","EditOutlined","key","SettingOutlined","size","gutter","span","ClockCircleOutlined","moment","format","textAlign","Title","Typography","CreateBoard","width","AddBoard","src","alt","marginTop","height","level","BOARD","FETCH","CREATE","UPDATE","axios","interceptors","request","use","config","origin","URL","url","allowedOrigins","process","token","localStorage","getItem","includes","headers","authorization","error","Promise","reject","BoardApi","fetchAPI","get","apiURL","then","data","fetchBoard","dispatch","type","payload","fetch","List","listBoardConnect","connect","state","listBoard","board","useEffect","map","e","i","Control","Img","img","isAccending","Dashboard","useState","setAccending","Sort","onClick","offset","Headerlayout","HeaderText","h4","active","Header","cate","pathname","useLocation","setActive","path","split","index","indexOf","to","USER","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGOUT","UserAPI","login","username","password","post","apiUrl","user","UserAction","UserApi","res","setItem","message","success","window","location","href","catch","err","logout","console","log","removeItem","LoginForm","Center","loginConnect","userAction","onFinish","layout","display","alignItems","justifyContent","Item","label","name","required","htmlType","loading","loggingIn","marginBottom","User","Alignright","AlignRight","Nav","TextLogo","h3","color","navbarConnect","logOut","overlay","placement","arrow","ProtectedRoute","Component","rest","Compo","render","loggedIn","appConnect","className","exact","component","number","root","Boolean","hostname","match","initState","rootReducer","action","reducerBoard","initialState","reducerUser","combineReducers","require","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c670a11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sort.75f0ef31.svg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst SectionLayout = styled.div`\r\n    margin-top:20px;\r\n    width:100%;\r\n`;\r\nexport default function Section({children, ...props}) {\r\n    return (\r\n        <SectionLayout {...props}>\r\n            {children}\r\n        </SectionLayout>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport moment from 'moment'\r\nimport { Card, Row, Col, Space } from \"antd\";\r\nimport {\r\n  ClockCircleOutlined,\r\n  SettingOutlined,\r\n  EditOutlined,\r\n} from \"@ant-design/icons\";\r\nfunction Board({ dayCreated, cardAmount, ...props }) {\r\n  return (\r\n      <Card\r\n        title={props.title}\r\n        style={{ minWidth: \"250px\", border: \"1px solid black\",margin:'10px' }}\r\n        hoverable={true}\r\n        actions={[\r\n          <EditOutlined key=\"edit\" />,\r\n          <SettingOutlined key=\"setting\" />,\r\n        ]}\r\n        size=\"small\"\r\n      >\r\n        <Row gutter={16}>\r\n          <Col span={14}>\r\n            <Space>\r\n              <ClockCircleOutlined />\r\n              {moment(dayCreated).format('DD/MM/YYYY') || \"a few second\"}\r\n            </Space>\r\n          </Col>\r\n          <Col span={10} style={{ textAlign: \"end\" }}>\r\n            {cardAmount || \"process\"}\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Typography } from \"antd\";\r\nconst { Title } = Typography;\r\nconst CreateBoard = styled.div`\r\n  min-height: 130px;\r\n  width: ${({ width }) => width || \"150px\"};\r\n  user-select: none;\r\n  cursor: pointer;\r\n  border: 2px dashed black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  margin: 10px;\r\n  background-color:white;\r\n  &:hover img{\r\n    transform:scale(1.1);\r\n  }\r\n  &:hover{\r\n    border-color:#51adcf;\r\n  }\r\n`;\r\nexport default function AddBoard() {\r\n  return (\r\n    <CreateBoard>\r\n      <img\r\n        src=\"https://www.flaticon.com/svg/static/icons/svg/60/60740.svg\"\r\n        alt=\"\"\r\n        style={{\r\n          marginTop:'10px',\r\n          width: \"50%\",\r\n          height: \"50%\",\r\n        }}\r\n      />\r\n      <Title level={5} style={{ marginTop: \"10px\" }}>\r\n        Add Board\r\n      </Title>\r\n    </CreateBoard>\r\n  );\r\n}\r\n","const BOARD = {\r\n    FETCH:'FETCH_BOARD',\r\n    CREATE:'CREATE_BOARD',\r\n    UPDATE:'UPDATE_BOARD',\r\n}\r\n\r\nexport default BOARD","import axios from \"axios\";\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const { origin } = new URL(config.url);\r\n    const allowedOrigins = [apiUrl];\r\n    const token = localStorage.getItem(\"token\");\r\n    if (allowedOrigins.includes(origin)) {\r\n      config.headers.authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axios;\r\n","import axios from \"./Axios\";\r\nconst BoardApi = {};\r\nconst apiURL = process.env.REACT_APP_API_URL + \"board\";\r\nBoardApi.fetchAPI = () => {\r\n  const temp = '/5f9964a7c1369a4150cc7deb';\r\n  return axios.get(apiURL+temp).then(({ data }) => {\r\n    return data.data;\r\n  });\r\n};\r\n\r\n// BoardApi.update = ({title})=>{\r\n//    return dispatch =>{\r\n//      axios.post(apiURL,{title}).then(res=>{\r\n//        return\r\n//      })\r\n//    }\r\n// }\r\nexport default BoardApi;\r\n","import BOARD from \"./constants\";\r\nimport BoardApi from '../../services/BoardAPI'\r\nexport const fetchBoard = () => {\r\n  const fetch =(data)=> ({type:BOARD.FETCH,payload:data});\r\n  return dispatch =>{\r\n    BoardApi.fetchAPI().then(data=>{\r\n      dispatch(fetch(data))\r\n    })\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Board from \"./Board\";\r\nimport AddBoard from \"./AddBoard\";\r\nimport { fetchBoard } from \"../../redux/Board/Board.action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst List = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: white;\r\n  justify-content:flex-start;\r\n  flex-wrap:wrap;\r\n`;\r\nconst ListBoard = (props) => {\r\n  useEffect(props.fetchBoard, []);\r\n  return (\r\n    <List>\r\n      <AddBoard />\r\n      {props.listBoard.map((e, i) => (\r\n        <Board {...e} key={i} />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  listBoard: state.board.listBoard,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchBoard: () => {\r\n      dispatch(fetchBoard());\r\n    },\r\n  };\r\n};\r\nconst listBoardConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListBoard);\r\nexport default listBoardConnect;\r\n","import React, {  useState } from \"react\";\r\n// import styled from \"styled-components\";\r\nimport Section from \"../components/Section\";\r\nimport { Space, Typography, Divider, Row, Col } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport Sort from \"../assets/icons/sort.svg\";\r\nimport ListBoard from \"../container/Board\";\r\nconst { Title } = Typography;\r\n\r\nconst Control = styled.div`\r\n  min-height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Img = styled.img`\r\n  transition: ease-in 0.3s;\r\n  transform: ${({ isAccending }) =>\r\n    isAccending ? \"rotate(180deg)\" : \"rotate(0deg)\"};\r\n`;\r\nconst Dashboard = (props) => {\r\n  const [isAccending, setAccending] = useState(false);\r\n  const onClickAccending = () => {\r\n    setAccending(!isAccending);\r\n  };\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title level={2}>My boards</Title>\r\n        <Control>\r\n          <Row gutter={16} style={{ width: \"100%\" }}>\r\n            <Col span={8}>\r\n              <Space>\r\n                <Title level={5} style={{ margin: 0 }}>\r\n                  Sort by date:\r\n                </Title>{\" \"}\r\n                <Img\r\n                  src={Sort}\r\n                  alt=\"\"\r\n                  isAccending={isAccending}\r\n                  onClick={onClickAccending}\r\n                />\r\n              </Space>\r\n            </Col>\r\n\r\n            <Col span={8} offset={8}></Col>\r\n          </Row>\r\n        </Control>\r\n        <Divider style={{ margin: \"10px 0px\" }} />\r\n        <ListBoard />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nconst Headerlayout = styled.div`\r\n  padding: 10px 0px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\nconst HeaderText = styled.h4`\r\n  display: inline-block;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 1.15em;\r\n  text-transform: capitalize;\r\n  cursor: pointer;\r\n  border-bottom: ${({ active }) => (active ? \"2px solid black\" : \"none\")};\r\n  &:after {\r\n    display: block;\r\n    content: \"\";\r\n    border-bottom: 2px solid black;\r\n    transform: scaleX(0);\r\n    transition: transform 250ms ease-in-out;\r\n  }\r\n  &:hover:after {\r\n    transform: ${({ active }) => (active ? \"scaleX(0)\" : \"scaleX(1)\")};\r\n  }\r\n`;\r\nconst Header = () => {\r\n  const cate = [\"dashboard\", \"team\", \"analytics\", \"billing\"];\r\n  const { pathname } = useLocation();\r\n  const [active, setActive] = useState(null);\r\n  useEffect(() => {\r\n    let path = pathname.split(\"/\");\r\n    if (path[1] === \"\") {\r\n      setActive(0);\r\n    } else {\r\n      let index = cate.indexOf(path[1]);\r\n      setActive(index);\r\n    }\r\n  }, [cate, pathname]);\r\n  const onClick = (i) => {};\r\n  return (\r\n    <>\r\n      <Row gutter={16}>\r\n        <Col span={8} offset={-16}>\r\n          <Headerlayout>\r\n            {cate.map((e, i) => (\r\n              <Link to={e} key={i}>\r\n                <HeaderText\r\n                  key={i}\r\n                  active={active === i}\r\n                  onClick={() => onClick(i)}\r\n                >\r\n                  {e}\r\n                </HeaderText>\r\n              </Link>\r\n            ))}\r\n          </Headerlayout>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const USER = {\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n    LOGOUT:\"USERS_REQUEST\"\r\n}\r\n\r\nexport default USER","import axios from \"./Axios\";\r\nconst UserAPI = {};\r\nconst apiUrl = process.env.REACT_APP_API_URL + \"user\";\r\nUserAPI.login = ({ username, password }) => {\r\n  return axios\r\n    .post(apiUrl + \"/login\", { username, password })\r\n    .then(({ data }) => {\r\n      return data.user;\r\n    });\r\n}\r\n\r\nexport default UserAPI;\r\n","import USER from \"./constants\";\r\nimport UserApi from \"../../services/UserAPI\";\r\nimport { message } from \"antd\";\r\n\r\nconst UserAction = {};\r\n\r\nUserAction.login = ({ username, password }) => {\r\n  const loginRequest = () => ({ type: USER.LOGIN_REQUEST });\r\n  const loginSuccess = (data) => {\r\n    message.success(\"Login success\");\r\n    return { type: USER.LOGIN_SUCCESS, payload: data };\r\n  };\r\n  const loginFailure = (data) => {\r\n    message.error(\"Invalid fields\");\r\n    return { type: USER.LOGIN_FAILURE, payload: data };\r\n  };\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n\r\n    UserApi.login({ username, password })\r\n      .then((res) => {\r\n        if (res) {\r\n          localStorage.setItem(\"token\", res.token);\r\n          localStorage.setItem(\"user\", res.user);\r\n          dispatch(loginSuccess(res.user));\r\n          window.location.href='/'\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginFailure());\r\n      });\r\n  };\r\n};\r\nUserAction.logout=()=>{\r\n    return dispatch =>{\r\n    console.log('hihi')\r\n\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        dispatch({type:USER.LOGOUT})\r\n    }\r\n}\r\nexport default UserAction;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Input, Typography, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport userAction from \"../../redux/User/User.action\";\r\nconst { Title } = Typography;\r\n\r\nconst LoginForm = styled.div`\r\n  width: 350px;\r\n  background-color: white;\r\n  -webkit-box-shadow: 0px 3px 15px -6px rgba(0, 0, 0, 0.75);\r\n  -moz-box-shadow: 0px 3px 15px -6px rgba(0, 0, 0, 0.75);\r\n  box-shadow: 0px 3px 15px -6px rgba(0, 0, 0, 0.75);\r\n  border-radius: 2px;\r\n  padding: 20px 20px;\r\n`;\r\nconst Center = styled.div`\r\n  min-height: 80vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nfunction Login(props) {\r\n  const onFinish = ({username,password}) => {\r\n    if(username&&password){\r\n        props.login({username,password})\r\n    }\r\n  };\r\n  return (\r\n    <Center>\r\n      <LoginForm>\r\n        <div>\r\n          <Title level={2} style={{ textAlign: \"center\" }}>\r\n            Login\r\n          </Title>\r\n        </div>\r\n        <Form\r\n          onFinish={onFinish}\r\n          layout=\"vertical\"\r\n          size=\"large\"\r\n          style={{\r\n            display: \"flext\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Form.Item label=\"Username\" name=\"username\" required>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" name=\"password\" required>\r\n            <Input type=\"password\" size=\"large\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button htmlType=\"submit\" style={{ width: \"100%\" }} type=\"primary\" loading={props.user.loggingIn}>\r\n              Login\r\n            </Button>\r\n          </Form.Item>\r\n          <div style={{ textAlign: \"center\", marginBottom: \"10px\" }}>Or</div>\r\n          <Form.Item>\r\n            <Button style={{ width: \"100%\" }}>Register</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </LoginForm>\r\n    </Center>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login:({username,password})=> dispatch(userAction.login({username,password})),\r\n  };\r\n};\r\nconst loginConnect = connect(mapStateToProps,mapDispatchToProps)(Login)\r\nexport default loginConnect;\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nconst User = () => {\r\n  return <Login />;\r\n};\r\n\r\nexport default User;\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Alignright = styled.div`\r\n  display: flex;\r\n  justify-content:flex-end;\r\n  align-items:center;\r\n`;\r\nexport default function AlignRight({children}) {\r\n    return (\r\n        <Alignright>\r\n            {children}\r\n        </Alignright>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Avatar, Row, Col } from \"antd\";\r\nimport AlignRight from \"../components/AlignRight\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport userAction from \"../redux/User/User.action\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Nav = styled.div`\r\n  display: flex;\r\n  background-color: black;\r\n  min-height: 50px;\r\n  align-items: center;\r\n  padding: 0px 100px;\r\n`;\r\nconst TextLogo = styled.h3`\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 1.5em;\r\n  color: ${(color) => (color ? \"white\" : \"black\")};\r\n`;\r\nfunction Navbar(props) {\r\n  const logOut = () => {props.logOut()};\r\n  const DropMenu = () => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item>Profile</Menu.Item>\r\n        <Menu.Item onClick={logOut}>Log out</Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  return (\r\n    <Nav>\r\n      <Row gutter={16} style={{ width: \"100%\" }}>\r\n        <Col span={4}>\r\n          <Link to={process.env.PUBLIC_URL+\"/\"}>\r\n            <TextLogo>FunRetro</TextLogo>\r\n          </Link>\r\n        </Col>\r\n        <Col span={4} offset={16}>\r\n          <AlignRight>\r\n            <Dropdown overlay={DropMenu} placement=\"bottomRight\" arrow>\r\n              <Avatar />\r\n            </Dropdown>\r\n          </AlignRight>\r\n        </Col>\r\n      </Row>\r\n    </Nav>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logOut: ()=>dispatch(userAction.logout()),\r\n  };\r\n};\r\n\r\nconst navbarConnect = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\nexport default navbarConnect;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Dashboard from \"../container/Dashboard\";\r\nimport Header from \"../container/Header\";\r\nimport User from \"../container/User\";\r\nimport { connect } from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\nfunction AppRouter(props) {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <div className=\"main\">\r\n          <Route exact path={process.env.PUBLIC_URL+\"/user\"} component={User} />\r\n          <ProtectedRoute exact path={process.env.PUBLIC_URL+\"/\"} Component={Dashboard} {...props} />\r\n          <ProtectedRoute\r\n            exact\r\n            path={process.env.PUBLIC_URL+\"/dashboard\"}\r\n            Component={Dashboard}\r\n            {...props}\r\n          />\r\n        </div>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\nconst ProtectedRoute = ({ Component, user, path, Compo, ...rest }) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={(props) => {\r\n        return user.loggedIn ? (\r\n          <>\r\n            <Header />\r\n            <Component {...props} />\r\n          </>\r\n        ) : (\r\n          <Redirect to={process.env.PUBLIC_URL+\"/user\"} />\r\n        );\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst appConnect = connect(mapStateToProps)(AppRouter);\r\nexport default appConnect;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AppRouter from './container/AppRouter'\r\nimport './App.css'\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n        <AppRouter/>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  number: state.root.number,\r\n});\r\n\r\nconst appConnect = connect(mapStateToProps)(App);\r\nexport default appConnect;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initState = {\r\n    user:null,\r\n    number:0\r\n}\r\n\r\nconst rootReducer = (state=initState,action)=>{\r\n    switch(action.type){\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import BOARD from \"./constants\";\r\nlet initState = {\r\n  listBoard: [],\r\n};\r\n\r\nconst reducerBoard = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case BOARD.FETCH:\r\n      state.listBoard = action.payload;\r\n      return { ...state };\r\n    case BOARD.UPDATE:\r\n      state.listBoard = action.payload;\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducerBoard;\r\n","import USER from \"./constants\";\r\n\r\nlet user = localStorage.getItem(\"user\");\r\nconst initialState = user ? { loggedIn: true, user, loggingIn: false } : {};\r\n\r\nconst reducerUser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER.LOGIN_REQUEST:\r\n      return {\r\n        loggingIn: true,\r\n        ...state,\r\n      };\r\n    case USER.LOGIN_SUCCESS:\r\n      return {\r\n        loggedIn: true,\r\n        user: action.payload,\r\n        loggingIn: false,\r\n        ...state,\r\n      };\r\n    case USER.LOGIN_FAILURE:\r\n      return {};\r\n    case USER.LOGOUT:\r\n      return {};\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\nexport default reducerUser;\r\n","import {combineReducers} from 'redux'\r\nimport root from './rootReducer'    \r\nimport board from '../redux/Board/Board.reducer'\r\nimport user from '../redux/User/User.reducer'\r\nconst rootReducer = combineReducers({\r\n    root,\r\n    board,\r\n    user\r\n})\r\n\r\nexport default rootReducer","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./redux-setup/store\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport \"antd/dist/antd.css\";\r\nrequire('dotenv').config();\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(ReduxThunk))\r\n);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}